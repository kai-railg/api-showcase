# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from . import task_info_pb2 as task__info__pb2


class Task_InfoStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.api_taskInfo_maintain_status_post = channel.unary_unary(
                '/Task_Info.Task_Info/api_taskInfo_maintain_status_post',
                request_serializer=task__info__pb2.Request.SerializeToString,
                response_deserializer=task__info__pb2.Response.FromString,
                )
        self.deleteAllArea = channel.unary_unary(
                '/Task_Info.Task_Info/deleteAllArea',
                request_serializer=task__info__pb2.Request.SerializeToString,
                response_deserializer=task__info__pb2.Response.FromString,
                )
        self.abortAllJob = channel.unary_unary(
                '/Task_Info.Task_Info/abortAllJob',
                request_serializer=task__info__pb2.Request.SerializeToString,
                response_deserializer=task__info__pb2.Response.FromString,
                )
        self.kvStore = channel.unary_unary(
                '/Task_Info.Task_Info/kvStore',
                request_serializer=task__info__pb2.Request.SerializeToString,
                response_deserializer=task__info__pb2.Response.FromString,
                )
        self.api_taskInfo_kvStore_post = channel.unary_unary(
                '/Task_Info.Task_Info/api_taskInfo_kvStore_post',
                request_serializer=task__info__pb2.SetKvStoreInSchema.SerializeToString,
                response_deserializer=task__info__pb2.Response.FromString,
                )
        self.api_taskInfo_kvStore_delete_post = channel.unary_unary(
                '/Task_Info.Task_Info/api_taskInfo_kvStore_delete_post',
                request_serializer=task__info__pb2.DeleteKvStore.SerializeToString,
                response_deserializer=task__info__pb2.Response.FromString,
                )
        self.api_taskInfo_kvStore_list_get = channel.unary_unary(
                '/Task_Info.Task_Info/api_taskInfo_kvStore_list_get',
                request_serializer=task__info__pb2.Request.SerializeToString,
                response_deserializer=task__info__pb2.Response.FromString,
                )
        self.api_taskInfo_kvStore_list_post = channel.unary_unary(
                '/Task_Info.Task_Info/api_taskInfo_kvStore_list_post',
                request_serializer=task__info__pb2.SetKvStoreListInSchema.SerializeToString,
                response_deserializer=task__info__pb2.Response.FromString,
                )
        self.listFind = channel.unary_unary(
                '/Task_Info.Task_Info/listFind',
                request_serializer=task__info__pb2.Request.SerializeToString,
                response_deserializer=task__info__pb2.Response.FromString,
                )
        self.process = channel.unary_unary(
                '/Task_Info.Task_Info/process',
                request_serializer=task__info__pb2.Request.SerializeToString,
                response_deserializer=task__info__pb2.Response.FromString,
                )
        self.api_taskInfo_process_post = channel.unary_unary(
                '/Task_Info.Task_Info/api_taskInfo_process_post',
                request_serializer=task__info__pb2.SetBusProcessInSchema.SerializeToString,
                response_deserializer=task__info__pb2.Response.FromString,
                )
        self.api_taskInfo_containerInfo_get = channel.unary_unary(
                '/Task_Info.Task_Info/api_taskInfo_containerInfo_get',
                request_serializer=task__info__pb2.Request.SerializeToString,
                response_deserializer=task__info__pb2.Response.FromString,
                )
        self.api_taskInfo_containerInfo_post = channel.unary_unary(
                '/Task_Info.Task_Info/api_taskInfo_containerInfo_post',
                request_serializer=task__info__pb2.SetContainerInfoInSchema.SerializeToString,
                response_deserializer=task__info__pb2.Response.FromString,
                )
        self.create = channel.unary_unary(
                '/Task_Info.Task_Info/create',
                request_serializer=task__info__pb2.Request.SerializeToString,
                response_deserializer=task__info__pb2.Response.FromString,
                )
        self.api_taskInfo_vehicleJob_status_post = channel.unary_unary(
                '/Task_Info.Task_Info/api_taskInfo_vehicleJob_status_post',
                request_serializer=task__info__pb2.Request.SerializeToString,
                response_deserializer=task__info__pb2.Response.FromString,
                )
        self.stage = channel.unary_unary(
                '/Task_Info.Task_Info/stage',
                request_serializer=task__info__pb2.Request.SerializeToString,
                response_deserializer=task__info__pb2.Response.FromString,
                )
        self.businessKey = channel.unary_unary(
                '/Task_Info.Task_Info/businessKey',
                request_serializer=task__info__pb2.Request.SerializeToString,
                response_deserializer=task__info__pb2.Response.FromString,
                )
        self.api_taskInfo_vehicleJob_get = channel.unary_unary(
                '/Task_Info.Task_Info/api_taskInfo_vehicleJob_get',
                request_serializer=task__info__pb2.Request.SerializeToString,
                response_deserializer=task__info__pb2.Response.FromString,
                )
        self.get = channel.unary_unary(
                '/Task_Info.Task_Info/get',
                request_serializer=task__info__pb2.Request.SerializeToString,
                response_deserializer=task__info__pb2.Response.FromString,
                )
        self.getStd = channel.unary_unary(
                '/Task_Info.Task_Info/getStd',
                request_serializer=task__info__pb2.Request.SerializeToString,
                response_deserializer=task__info__pb2.Response.FromString,
                )
        self.getByMission = channel.unary_unary(
                '/Task_Info.Task_Info/getByMission',
                request_serializer=task__info__pb2.Request.SerializeToString,
                response_deserializer=task__info__pb2.Response.FromString,
                )
        self.api_taskInfo_vehicleJob_abort_post = channel.unary_unary(
                '/Task_Info.Task_Info/api_taskInfo_vehicleJob_abort_post',
                request_serializer=task__info__pb2.Request.SerializeToString,
                response_deserializer=task__info__pb2.Response.FromString,
                )
        self.updateJobDest = channel.unary_unary(
                '/Task_Info.Task_Info/updateJobDest',
                request_serializer=task__info__pb2.UpdateJobDest.SerializeToString,
                response_deserializer=task__info__pb2.Response.FromString,
                )
        self.updatePlanContainers = channel.unary_unary(
                '/Task_Info.Task_Info/updatePlanContainers',
                request_serializer=task__info__pb2.UpdatePlanContainers.SerializeToString,
                response_deserializer=task__info__pb2.Response.FromString,
                )
        self.api_taskInfo_vehicleJob_complete_post = channel.unary_unary(
                '/Task_Info.Task_Info/api_taskInfo_vehicleJob_complete_post',
                request_serializer=task__info__pb2.Request.SerializeToString,
                response_deserializer=task__info__pb2.Response.FromString,
                )
        self.jobMission = channel.unary_unary(
                '/Task_Info.Task_Info/jobMission',
                request_serializer=task__info__pb2.Request.SerializeToString,
                response_deserializer=task__info__pb2.Response.FromString,
                )
        self.api_taskInfo_vehicleJob_jobMission_post = channel.unary_unary(
                '/Task_Info.Task_Info/api_taskInfo_vehicleJob_jobMission_post',
                request_serializer=task__info__pb2.Request.SerializeToString,
                response_deserializer=task__info__pb2.Response.FromString,
                )
        self.stageTag = channel.unary_unary(
                '/Task_Info.Task_Info/stageTag',
                request_serializer=task__info__pb2.Request.SerializeToString,
                response_deserializer=task__info__pb2.Response.FromString,
                )
        self.api_taskInfo_vehicleJob_resendJob_post = channel.unary_unary(
                '/Task_Info.Task_Info/api_taskInfo_vehicleJob_resendJob_post',
                request_serializer=task__info__pb2.ResendJobPost.SerializeToString,
                response_deserializer=task__info__pb2.Response.FromString,
                )
        self.api_taskInfo_vehicleJob_delete_post = channel.unary_unary(
                '/Task_Info.Task_Info/api_taskInfo_vehicleJob_delete_post',
                request_serializer=task__info__pb2.DeleteJobPost.SerializeToString,
                response_deserializer=task__info__pb2.Response.FromString,
                )
        self.api_taskInfo_vehicleJob_query_post = channel.unary_unary(
                '/Task_Info.Task_Info/api_taskInfo_vehicleJob_query_post',
                request_serializer=task__info__pb2.QueryJobPost.SerializeToString,
                response_deserializer=task__info__pb2.Response.FromString,
                )
        self.newest = channel.unary_unary(
                '/Task_Info.Task_Info/newest',
                request_serializer=task__info__pb2.Request.SerializeToString,
                response_deserializer=task__info__pb2.Response.FromString,
                )
        self.all_newest_job = channel.unary_unary(
                '/Task_Info.Task_Info/all_newest_job',
                request_serializer=task__info__pb2.Request.SerializeToString,
                response_deserializer=task__info__pb2.Response.FromString,
                )
        self.api_taskInfo_vehicleJob_all_current_job_get = channel.unary_unary(
                '/Task_Info.Task_Info/api_taskInfo_vehicleJob_all_current_job_get',
                request_serializer=task__info__pb2.Request.SerializeToString,
                response_deserializer=task__info__pb2.Response.FromString,
                )
        self.api_taskInfo_vehicleJob_query_all_post = channel.unary_unary(
                '/Task_Info.Task_Info/api_taskInfo_vehicleJob_query_all_post',
                request_serializer=task__info__pb2.QueryJobAllPost.SerializeToString,
                response_deserializer=task__info__pb2.Response.FromString,
                )
        self.all_newest_job_filter = channel.unary_unary(
                '/Task_Info.Task_Info/all_newest_job_filter',
                request_serializer=task__info__pb2.Request.SerializeToString,
                response_deserializer=task__info__pb2.Response.FromString,
                )
        self.virtual_points = channel.unary_unary(
                '/Task_Info.Task_Info/virtual_points',
                request_serializer=task__info__pb2.Request.SerializeToString,
                response_deserializer=task__info__pb2.Response.FromString,
                )
        self.api_taskInfo_vehicleJob_virtual_points_post = channel.unary_unary(
                '/Task_Info.Task_Info/api_taskInfo_vehicleJob_virtual_points_post',
                request_serializer=task__info__pb2.VirtualPointsPost.SerializeToString,
                response_deserializer=task__info__pb2.Response.FromString,
                )
        self.workflowConfig = channel.unary_unary(
                '/Task_Info.Task_Info/workflowConfig',
                request_serializer=task__info__pb2.Request.SerializeToString,
                response_deserializer=task__info__pb2.Response.FromString,
                )
        self.api_taskInfo_workflowConfig_post = channel.unary_unary(
                '/Task_Info.Task_Info/api_taskInfo_workflowConfig_post',
                request_serializer=task__info__pb2.Request.SerializeToString,
                response_deserializer=task__info__pb2.Response.FromString,
                )
        self.api_taskInfo_lockArea_get = channel.unary_unary(
                '/Task_Info.Task_Info/api_taskInfo_lockArea_get',
                request_serializer=task__info__pb2.Request.SerializeToString,
                response_deserializer=task__info__pb2.Response.FromString,
                )
        self.api_taskInfo_lockArea_post = channel.unary_unary(
                '/Task_Info.Task_Info/api_taskInfo_lockArea_post',
                request_serializer=task__info__pb2.Request.SerializeToString,
                response_deserializer=task__info__pb2.Response.FromString,
                )
        self.api_taskInfo_lockArea_delete_post = channel.unary_unary(
                '/Task_Info.Task_Info/api_taskInfo_lockArea_delete_post',
                request_serializer=task__info__pb2.Request.SerializeToString,
                response_deserializer=task__info__pb2.Response.FromString,
                )
        self.api_taskInfo_lockArea_deleteByTag_post = channel.unary_unary(
                '/Task_Info.Task_Info/api_taskInfo_lockArea_deleteByTag_post',
                request_serializer=task__info__pb2.Request.SerializeToString,
                response_deserializer=task__info__pb2.Response.FromString,
                )
        self.api_taskInfo_lockArea_change_post = channel.unary_unary(
                '/Task_Info.Task_Info/api_taskInfo_lockArea_change_post',
                request_serializer=task__info__pb2.Request.SerializeToString,
                response_deserializer=task__info__pb2.Response.FromString,
                )
        self.changeByTag = channel.unary_unary(
                '/Task_Info.Task_Info/changeByTag',
                request_serializer=task__info__pb2.Request.SerializeToString,
                response_deserializer=task__info__pb2.Response.FromString,
                )
        self.api_taskInfo_VesselInfo_SetVesselInfo_post = channel.unary_unary(
                '/Task_Info.Task_Info/api_taskInfo_VesselInfo_SetVesselInfo_post',
                request_serializer=task__info__pb2.SetVesselInfoSchemas.SerializeToString,
                response_deserializer=task__info__pb2.Response.FromString,
                )
        self.api_taskInfo_VesselInfo_EditVesselInfo_post = channel.unary_unary(
                '/Task_Info.Task_Info/api_taskInfo_VesselInfo_EditVesselInfo_post',
                request_serializer=task__info__pb2.Request.SerializeToString,
                response_deserializer=task__info__pb2.Response.FromString,
                )
        self.GetVesselInfo = channel.unary_unary(
                '/Task_Info.Task_Info/GetVesselInfo',
                request_serializer=task__info__pb2.Request.SerializeToString,
                response_deserializer=task__info__pb2.Response.FromString,
                )
        self.DeleteVesselInfo = channel.unary_unary(
                '/Task_Info.Task_Info/DeleteVesselInfo',
                request_serializer=task__info__pb2.DelVesselInfoSchemas.SerializeToString,
                response_deserializer=task__info__pb2.Response.FromString,
                )
        self.api_taskInfo_VesselInfo_SetVesselInfoStatus_post = channel.unary_unary(
                '/Task_Info.Task_Info/api_taskInfo_VesselInfo_SetVesselInfoStatus_post',
                request_serializer=task__info__pb2.SetVesselInfoStatusSchemas.SerializeToString,
                response_deserializer=task__info__pb2.Response.FromString,
                )
        self.AlarmMessageStart = channel.unary_unary(
                '/Task_Info.Task_Info/AlarmMessageStart',
                request_serializer=task__info__pb2.SetAlarmMessage.SerializeToString,
                response_deserializer=task__info__pb2.Response.FromString,
                )
        self.AlarmMessageStart_bak = channel.unary_unary(
                '/Task_Info.Task_Info/AlarmMessageStart_bak',
                request_serializer=task__info__pb2.SetAlarmMessage.SerializeToString,
                response_deserializer=task__info__pb2.Response.FromString,
                )
        self.AlarmMessageStop = channel.unary_unary(
                '/Task_Info.Task_Info/AlarmMessageStop',
                request_serializer=task__info__pb2.StopAlarmMessage.SerializeToString,
                response_deserializer=task__info__pb2.Response.FromString,
                )
        self.GetAlarmMessage = channel.unary_unary(
                '/Task_Info.Task_Info/GetAlarmMessage',
                request_serializer=task__info__pb2.AlarmMessageSchema.SerializeToString,
                response_deserializer=task__info__pb2.Response.FromString,
                )
        self.SetFmsMessage = channel.unary_unary(
                '/Task_Info.Task_Info/SetFmsMessage',
                request_serializer=task__info__pb2.SetFMSMessage.SerializeToString,
                response_deserializer=task__info__pb2.Response.FromString,
                )
        self.GetFmsMessage = channel.unary_unary(
                '/Task_Info.Task_Info/GetFmsMessage',
                request_serializer=task__info__pb2.AlarmMessageSchema.SerializeToString,
                response_deserializer=task__info__pb2.Response.FromString,
                )
        self.set = channel.unary_unary(
                '/Task_Info.Task_Info/set',
                request_serializer=task__info__pb2.Request.SerializeToString,
                response_deserializer=task__info__pb2.Response.FromString,
                )
        self.api_taskInfo_subTask_get_get = channel.unary_unary(
                '/Task_Info.Task_Info/api_taskInfo_subTask_get_get',
                request_serializer=task__info__pb2.Request.SerializeToString,
                response_deserializer=task__info__pb2.Response.FromString,
                )
        self.api_taskInfo_subTask_clear_post = channel.unary_unary(
                '/Task_Info.Task_Info/api_taskInfo_subTask_clear_post',
                request_serializer=task__info__pb2.Request.SerializeToString,
                response_deserializer=task__info__pb2.Response.FromString,
                )
        self.fenceEvent = channel.unary_unary(
                '/Task_Info.Task_Info/fenceEvent',
                request_serializer=task__info__pb2.CreateFence.SerializeToString,
                response_deserializer=task__info__pb2.Response.FromString,
                )
        self.finish = channel.unary_unary(
                '/Task_Info.Task_Info/finish',
                request_serializer=task__info__pb2.FinishFenceEvent.SerializeToString,
                response_deserializer=task__info__pb2.Response.FromString,
                )
        self.api_taskInfo_fenceEvent_get_post = channel.unary_unary(
                '/Task_Info.Task_Info/api_taskInfo_fenceEvent_get_post',
                request_serializer=task__info__pb2.Request.SerializeToString,
                response_deserializer=task__info__pb2.Response.FromString,
                )
        self.api_taskInfo_taskPool_get_post = channel.unary_unary(
                '/Task_Info.Task_Info/api_taskInfo_taskPool_get_post',
                request_serializer=task__info__pb2.Request.SerializeToString,
                response_deserializer=task__info__pb2.Response.FromString,
                )
        self.add = channel.unary_unary(
                '/Task_Info.Task_Info/add',
                request_serializer=task__info__pb2.Request.SerializeToString,
                response_deserializer=task__info__pb2.Response.FromString,
                )
        self.api_taskInfo_taskPool_update_post = channel.unary_unary(
                '/Task_Info.Task_Info/api_taskInfo_taskPool_update_post',
                request_serializer=task__info__pb2.Request.SerializeToString,
                response_deserializer=task__info__pb2.Response.FromString,
                )
        self.api_taskInfo_taskPool_abort_post = channel.unary_unary(
                '/Task_Info.Task_Info/api_taskInfo_taskPool_abort_post',
                request_serializer=task__info__pb2.Request.SerializeToString,
                response_deserializer=task__info__pb2.Response.FromString,
                )
        self.api_taskInfo_taskPool_runImmediate_post = channel.unary_unary(
                '/Task_Info.Task_Info/api_taskInfo_taskPool_runImmediate_post',
                request_serializer=task__info__pb2.Request.SerializeToString,
                response_deserializer=task__info__pb2.Response.FromString,
                )
        self.api_taskInfo_taskPool_delete_post = channel.unary_unary(
                '/Task_Info.Task_Info/api_taskInfo_taskPool_delete_post',
                request_serializer=task__info__pb2.Request.SerializeToString,
                response_deserializer=task__info__pb2.Response.FromString,
                )
        self.TsRelated = channel.unary_unary(
                '/Task_Info.Task_Info/TsRelated',
                request_serializer=task__info__pb2.Request.SerializeToString,
                response_deserializer=task__info__pb2.Response.FromString,
                )
        self.api_taskInfo_TsRelated_delete_post = channel.unary_unary(
                '/Task_Info.Task_Info/api_taskInfo_TsRelated_delete_post',
                request_serializer=task__info__pb2.Request.SerializeToString,
                response_deserializer=task__info__pb2.Response.FromString,
                )
        self.Edit = channel.unary_unary(
                '/Task_Info.Task_Info/Edit',
                request_serializer=task__info__pb2.Request.SerializeToString,
                response_deserializer=task__info__pb2.Response.FromString,
                )
        self.Get = channel.unary_unary(
                '/Task_Info.Task_Info/Get',
                request_serializer=task__info__pb2.GetTsSchemas.SerializeToString,
                response_deserializer=task__info__pb2.Response.FromString,
                )
        self.api_taskInfo_EquipmentStatus_post = channel.unary_unary(
                '/Task_Info.Task_Info/api_taskInfo_EquipmentStatus_post',
                request_serializer=task__info__pb2.Request.SerializeToString,
                response_deserializer=task__info__pb2.Response.FromString,
                )
        self.api_taskInfo_EquipmentStatus_Get_get = channel.unary_unary(
                '/Task_Info.Task_Info/api_taskInfo_EquipmentStatus_Get_get',
                request_serializer=task__info__pb2.Request.SerializeToString,
                response_deserializer=task__info__pb2.Response.FromString,
                )
        self.api_taskInfo_EquipmentStatus_SpreaderSize_post = channel.unary_unary(
                '/Task_Info.Task_Info/api_taskInfo_EquipmentStatus_SpreaderSize_post',
                request_serializer=task__info__pb2.Request.SerializeToString,
                response_deserializer=task__info__pb2.Response.FromString,
                )
        self.GetSpreaderSize = channel.unary_unary(
                '/Task_Info.Task_Info/GetSpreaderSize',
                request_serializer=task__info__pb2.Request.SerializeToString,
                response_deserializer=task__info__pb2.Response.FromString,
                )
        self.api_taskInfo_PaceGlobal_post = channel.unary_unary(
                '/Task_Info.Task_Info/api_taskInfo_PaceGlobal_post',
                request_serializer=task__info__pb2.Request.SerializeToString,
                response_deserializer=task__info__pb2.Response.FromString,
                )
        self.api_taskInfo_quayCrane_SetLane_post = channel.unary_unary(
                '/Task_Info.Task_Info/api_taskInfo_quayCrane_SetLane_post',
                request_serializer=task__info__pb2.SetLaneInSchema.SerializeToString,
                response_deserializer=task__info__pb2.Response.FromString,
                )
        self.GetLane = channel.unary_unary(
                '/Task_Info.Task_Info/GetLane',
                request_serializer=task__info__pb2.Request.SerializeToString,
                response_deserializer=task__info__pb2.Response.FromString,
                )
        self.preArrive = channel.unary_unary(
                '/Task_Info.Task_Info/preArrive',
                request_serializer=task__info__pb2.PreArriveInSchema.SerializeToString,
                response_deserializer=task__info__pb2.Response.FromString,
                )
        self.ts_switch = channel.unary_unary(
                '/Task_Info.Task_Info/ts_switch',
                request_serializer=task__info__pb2.Request.SerializeToString,
                response_deserializer=task__info__pb2.Response.FromString,
                )
        self.api_taskInfo_ts_switch_post = channel.unary_unary(
                '/Task_Info.Task_Info/api_taskInfo_ts_switch_post',
                request_serializer=task__info__pb2.LockSwitchInSchema.SerializeToString,
                response_deserializer=task__info__pb2.Response.FromString,
                )
        self.sim_start_job = channel.unary_unary(
                '/Task_Info.Task_Info/sim_start_job',
                request_serializer=task__info__pb2.Request.SerializeToString,
                response_deserializer=task__info__pb2.Response.FromString,
                )
        self.fullControl = channel.unary_unary(
                '/Task_Info.Task_Info/fullControl',
                request_serializer=task__info__pb2.FullStopStatus.SerializeToString,
                response_deserializer=task__info__pb2.Response.FromString,
                )


class Task_InfoServicer(object):
    """Missing associated documentation comment in .proto file."""

    def api_taskInfo_maintain_status_post(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def deleteAllArea(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def abortAllJob(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def kvStore(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def api_taskInfo_kvStore_post(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def api_taskInfo_kvStore_delete_post(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def api_taskInfo_kvStore_list_get(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def api_taskInfo_kvStore_list_post(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def listFind(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def process(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def api_taskInfo_process_post(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def api_taskInfo_containerInfo_get(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def api_taskInfo_containerInfo_post(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def create(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def api_taskInfo_vehicleJob_status_post(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def stage(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def businessKey(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def api_taskInfo_vehicleJob_get(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def get(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def getStd(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def getByMission(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def api_taskInfo_vehicleJob_abort_post(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def updateJobDest(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def updatePlanContainers(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def api_taskInfo_vehicleJob_complete_post(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def jobMission(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def api_taskInfo_vehicleJob_jobMission_post(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def stageTag(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def api_taskInfo_vehicleJob_resendJob_post(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def api_taskInfo_vehicleJob_delete_post(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def api_taskInfo_vehicleJob_query_post(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def newest(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def all_newest_job(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def api_taskInfo_vehicleJob_all_current_job_get(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def api_taskInfo_vehicleJob_query_all_post(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def all_newest_job_filter(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def virtual_points(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def api_taskInfo_vehicleJob_virtual_points_post(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def workflowConfig(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def api_taskInfo_workflowConfig_post(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def api_taskInfo_lockArea_get(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def api_taskInfo_lockArea_post(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def api_taskInfo_lockArea_delete_post(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def api_taskInfo_lockArea_deleteByTag_post(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def api_taskInfo_lockArea_change_post(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def changeByTag(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def api_taskInfo_VesselInfo_SetVesselInfo_post(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def api_taskInfo_VesselInfo_EditVesselInfo_post(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetVesselInfo(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteVesselInfo(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def api_taskInfo_VesselInfo_SetVesselInfoStatus_post(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AlarmMessageStart(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AlarmMessageStart_bak(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AlarmMessageStop(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetAlarmMessage(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetFmsMessage(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetFmsMessage(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def set(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def api_taskInfo_subTask_get_get(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def api_taskInfo_subTask_clear_post(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def fenceEvent(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def finish(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def api_taskInfo_fenceEvent_get_post(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def api_taskInfo_taskPool_get_post(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def add(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def api_taskInfo_taskPool_update_post(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def api_taskInfo_taskPool_abort_post(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def api_taskInfo_taskPool_runImmediate_post(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def api_taskInfo_taskPool_delete_post(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def TsRelated(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def api_taskInfo_TsRelated_delete_post(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Edit(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Get(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def api_taskInfo_EquipmentStatus_post(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def api_taskInfo_EquipmentStatus_Get_get(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def api_taskInfo_EquipmentStatus_SpreaderSize_post(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetSpreaderSize(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def api_taskInfo_PaceGlobal_post(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def api_taskInfo_quayCrane_SetLane_post(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetLane(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def preArrive(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ts_switch(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def api_taskInfo_ts_switch_post(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def sim_start_job(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def fullControl(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_Task_InfoServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'api_taskInfo_maintain_status_post': grpc.unary_unary_rpc_method_handler(
                    servicer.api_taskInfo_maintain_status_post,
                    request_deserializer=task__info__pb2.Request.FromString,
                    response_serializer=task__info__pb2.Response.SerializeToString,
            ),
            'deleteAllArea': grpc.unary_unary_rpc_method_handler(
                    servicer.deleteAllArea,
                    request_deserializer=task__info__pb2.Request.FromString,
                    response_serializer=task__info__pb2.Response.SerializeToString,
            ),
            'abortAllJob': grpc.unary_unary_rpc_method_handler(
                    servicer.abortAllJob,
                    request_deserializer=task__info__pb2.Request.FromString,
                    response_serializer=task__info__pb2.Response.SerializeToString,
            ),
            'kvStore': grpc.unary_unary_rpc_method_handler(
                    servicer.kvStore,
                    request_deserializer=task__info__pb2.Request.FromString,
                    response_serializer=task__info__pb2.Response.SerializeToString,
            ),
            'api_taskInfo_kvStore_post': grpc.unary_unary_rpc_method_handler(
                    servicer.api_taskInfo_kvStore_post,
                    request_deserializer=task__info__pb2.SetKvStoreInSchema.FromString,
                    response_serializer=task__info__pb2.Response.SerializeToString,
            ),
            'api_taskInfo_kvStore_delete_post': grpc.unary_unary_rpc_method_handler(
                    servicer.api_taskInfo_kvStore_delete_post,
                    request_deserializer=task__info__pb2.DeleteKvStore.FromString,
                    response_serializer=task__info__pb2.Response.SerializeToString,
            ),
            'api_taskInfo_kvStore_list_get': grpc.unary_unary_rpc_method_handler(
                    servicer.api_taskInfo_kvStore_list_get,
                    request_deserializer=task__info__pb2.Request.FromString,
                    response_serializer=task__info__pb2.Response.SerializeToString,
            ),
            'api_taskInfo_kvStore_list_post': grpc.unary_unary_rpc_method_handler(
                    servicer.api_taskInfo_kvStore_list_post,
                    request_deserializer=task__info__pb2.SetKvStoreListInSchema.FromString,
                    response_serializer=task__info__pb2.Response.SerializeToString,
            ),
            'listFind': grpc.unary_unary_rpc_method_handler(
                    servicer.listFind,
                    request_deserializer=task__info__pb2.Request.FromString,
                    response_serializer=task__info__pb2.Response.SerializeToString,
            ),
            'process': grpc.unary_unary_rpc_method_handler(
                    servicer.process,
                    request_deserializer=task__info__pb2.Request.FromString,
                    response_serializer=task__info__pb2.Response.SerializeToString,
            ),
            'api_taskInfo_process_post': grpc.unary_unary_rpc_method_handler(
                    servicer.api_taskInfo_process_post,
                    request_deserializer=task__info__pb2.SetBusProcessInSchema.FromString,
                    response_serializer=task__info__pb2.Response.SerializeToString,
            ),
            'api_taskInfo_containerInfo_get': grpc.unary_unary_rpc_method_handler(
                    servicer.api_taskInfo_containerInfo_get,
                    request_deserializer=task__info__pb2.Request.FromString,
                    response_serializer=task__info__pb2.Response.SerializeToString,
            ),
            'api_taskInfo_containerInfo_post': grpc.unary_unary_rpc_method_handler(
                    servicer.api_taskInfo_containerInfo_post,
                    request_deserializer=task__info__pb2.SetContainerInfoInSchema.FromString,
                    response_serializer=task__info__pb2.Response.SerializeToString,
            ),
            'create': grpc.unary_unary_rpc_method_handler(
                    servicer.create,
                    request_deserializer=task__info__pb2.Request.FromString,
                    response_serializer=task__info__pb2.Response.SerializeToString,
            ),
            'api_taskInfo_vehicleJob_status_post': grpc.unary_unary_rpc_method_handler(
                    servicer.api_taskInfo_vehicleJob_status_post,
                    request_deserializer=task__info__pb2.Request.FromString,
                    response_serializer=task__info__pb2.Response.SerializeToString,
            ),
            'stage': grpc.unary_unary_rpc_method_handler(
                    servicer.stage,
                    request_deserializer=task__info__pb2.Request.FromString,
                    response_serializer=task__info__pb2.Response.SerializeToString,
            ),
            'businessKey': grpc.unary_unary_rpc_method_handler(
                    servicer.businessKey,
                    request_deserializer=task__info__pb2.Request.FromString,
                    response_serializer=task__info__pb2.Response.SerializeToString,
            ),
            'api_taskInfo_vehicleJob_get': grpc.unary_unary_rpc_method_handler(
                    servicer.api_taskInfo_vehicleJob_get,
                    request_deserializer=task__info__pb2.Request.FromString,
                    response_serializer=task__info__pb2.Response.SerializeToString,
            ),
            'get': grpc.unary_unary_rpc_method_handler(
                    servicer.get,
                    request_deserializer=task__info__pb2.Request.FromString,
                    response_serializer=task__info__pb2.Response.SerializeToString,
            ),
            'getStd': grpc.unary_unary_rpc_method_handler(
                    servicer.getStd,
                    request_deserializer=task__info__pb2.Request.FromString,
                    response_serializer=task__info__pb2.Response.SerializeToString,
            ),
            'getByMission': grpc.unary_unary_rpc_method_handler(
                    servicer.getByMission,
                    request_deserializer=task__info__pb2.Request.FromString,
                    response_serializer=task__info__pb2.Response.SerializeToString,
            ),
            'api_taskInfo_vehicleJob_abort_post': grpc.unary_unary_rpc_method_handler(
                    servicer.api_taskInfo_vehicleJob_abort_post,
                    request_deserializer=task__info__pb2.Request.FromString,
                    response_serializer=task__info__pb2.Response.SerializeToString,
            ),
            'updateJobDest': grpc.unary_unary_rpc_method_handler(
                    servicer.updateJobDest,
                    request_deserializer=task__info__pb2.UpdateJobDest.FromString,
                    response_serializer=task__info__pb2.Response.SerializeToString,
            ),
            'updatePlanContainers': grpc.unary_unary_rpc_method_handler(
                    servicer.updatePlanContainers,
                    request_deserializer=task__info__pb2.UpdatePlanContainers.FromString,
                    response_serializer=task__info__pb2.Response.SerializeToString,
            ),
            'api_taskInfo_vehicleJob_complete_post': grpc.unary_unary_rpc_method_handler(
                    servicer.api_taskInfo_vehicleJob_complete_post,
                    request_deserializer=task__info__pb2.Request.FromString,
                    response_serializer=task__info__pb2.Response.SerializeToString,
            ),
            'jobMission': grpc.unary_unary_rpc_method_handler(
                    servicer.jobMission,
                    request_deserializer=task__info__pb2.Request.FromString,
                    response_serializer=task__info__pb2.Response.SerializeToString,
            ),
            'api_taskInfo_vehicleJob_jobMission_post': grpc.unary_unary_rpc_method_handler(
                    servicer.api_taskInfo_vehicleJob_jobMission_post,
                    request_deserializer=task__info__pb2.Request.FromString,
                    response_serializer=task__info__pb2.Response.SerializeToString,
            ),
            'stageTag': grpc.unary_unary_rpc_method_handler(
                    servicer.stageTag,
                    request_deserializer=task__info__pb2.Request.FromString,
                    response_serializer=task__info__pb2.Response.SerializeToString,
            ),
            'api_taskInfo_vehicleJob_resendJob_post': grpc.unary_unary_rpc_method_handler(
                    servicer.api_taskInfo_vehicleJob_resendJob_post,
                    request_deserializer=task__info__pb2.ResendJobPost.FromString,
                    response_serializer=task__info__pb2.Response.SerializeToString,
            ),
            'api_taskInfo_vehicleJob_delete_post': grpc.unary_unary_rpc_method_handler(
                    servicer.api_taskInfo_vehicleJob_delete_post,
                    request_deserializer=task__info__pb2.DeleteJobPost.FromString,
                    response_serializer=task__info__pb2.Response.SerializeToString,
            ),
            'api_taskInfo_vehicleJob_query_post': grpc.unary_unary_rpc_method_handler(
                    servicer.api_taskInfo_vehicleJob_query_post,
                    request_deserializer=task__info__pb2.QueryJobPost.FromString,
                    response_serializer=task__info__pb2.Response.SerializeToString,
            ),
            'newest': grpc.unary_unary_rpc_method_handler(
                    servicer.newest,
                    request_deserializer=task__info__pb2.Request.FromString,
                    response_serializer=task__info__pb2.Response.SerializeToString,
            ),
            'all_newest_job': grpc.unary_unary_rpc_method_handler(
                    servicer.all_newest_job,
                    request_deserializer=task__info__pb2.Request.FromString,
                    response_serializer=task__info__pb2.Response.SerializeToString,
            ),
            'api_taskInfo_vehicleJob_all_current_job_get': grpc.unary_unary_rpc_method_handler(
                    servicer.api_taskInfo_vehicleJob_all_current_job_get,
                    request_deserializer=task__info__pb2.Request.FromString,
                    response_serializer=task__info__pb2.Response.SerializeToString,
            ),
            'api_taskInfo_vehicleJob_query_all_post': grpc.unary_unary_rpc_method_handler(
                    servicer.api_taskInfo_vehicleJob_query_all_post,
                    request_deserializer=task__info__pb2.QueryJobAllPost.FromString,
                    response_serializer=task__info__pb2.Response.SerializeToString,
            ),
            'all_newest_job_filter': grpc.unary_unary_rpc_method_handler(
                    servicer.all_newest_job_filter,
                    request_deserializer=task__info__pb2.Request.FromString,
                    response_serializer=task__info__pb2.Response.SerializeToString,
            ),
            'virtual_points': grpc.unary_unary_rpc_method_handler(
                    servicer.virtual_points,
                    request_deserializer=task__info__pb2.Request.FromString,
                    response_serializer=task__info__pb2.Response.SerializeToString,
            ),
            'api_taskInfo_vehicleJob_virtual_points_post': grpc.unary_unary_rpc_method_handler(
                    servicer.api_taskInfo_vehicleJob_virtual_points_post,
                    request_deserializer=task__info__pb2.VirtualPointsPost.FromString,
                    response_serializer=task__info__pb2.Response.SerializeToString,
            ),
            'workflowConfig': grpc.unary_unary_rpc_method_handler(
                    servicer.workflowConfig,
                    request_deserializer=task__info__pb2.Request.FromString,
                    response_serializer=task__info__pb2.Response.SerializeToString,
            ),
            'api_taskInfo_workflowConfig_post': grpc.unary_unary_rpc_method_handler(
                    servicer.api_taskInfo_workflowConfig_post,
                    request_deserializer=task__info__pb2.Request.FromString,
                    response_serializer=task__info__pb2.Response.SerializeToString,
            ),
            'api_taskInfo_lockArea_get': grpc.unary_unary_rpc_method_handler(
                    servicer.api_taskInfo_lockArea_get,
                    request_deserializer=task__info__pb2.Request.FromString,
                    response_serializer=task__info__pb2.Response.SerializeToString,
            ),
            'api_taskInfo_lockArea_post': grpc.unary_unary_rpc_method_handler(
                    servicer.api_taskInfo_lockArea_post,
                    request_deserializer=task__info__pb2.Request.FromString,
                    response_serializer=task__info__pb2.Response.SerializeToString,
            ),
            'api_taskInfo_lockArea_delete_post': grpc.unary_unary_rpc_method_handler(
                    servicer.api_taskInfo_lockArea_delete_post,
                    request_deserializer=task__info__pb2.Request.FromString,
                    response_serializer=task__info__pb2.Response.SerializeToString,
            ),
            'api_taskInfo_lockArea_deleteByTag_post': grpc.unary_unary_rpc_method_handler(
                    servicer.api_taskInfo_lockArea_deleteByTag_post,
                    request_deserializer=task__info__pb2.Request.FromString,
                    response_serializer=task__info__pb2.Response.SerializeToString,
            ),
            'api_taskInfo_lockArea_change_post': grpc.unary_unary_rpc_method_handler(
                    servicer.api_taskInfo_lockArea_change_post,
                    request_deserializer=task__info__pb2.Request.FromString,
                    response_serializer=task__info__pb2.Response.SerializeToString,
            ),
            'changeByTag': grpc.unary_unary_rpc_method_handler(
                    servicer.changeByTag,
                    request_deserializer=task__info__pb2.Request.FromString,
                    response_serializer=task__info__pb2.Response.SerializeToString,
            ),
            'api_taskInfo_VesselInfo_SetVesselInfo_post': grpc.unary_unary_rpc_method_handler(
                    servicer.api_taskInfo_VesselInfo_SetVesselInfo_post,
                    request_deserializer=task__info__pb2.SetVesselInfoSchemas.FromString,
                    response_serializer=task__info__pb2.Response.SerializeToString,
            ),
            'api_taskInfo_VesselInfo_EditVesselInfo_post': grpc.unary_unary_rpc_method_handler(
                    servicer.api_taskInfo_VesselInfo_EditVesselInfo_post,
                    request_deserializer=task__info__pb2.Request.FromString,
                    response_serializer=task__info__pb2.Response.SerializeToString,
            ),
            'GetVesselInfo': grpc.unary_unary_rpc_method_handler(
                    servicer.GetVesselInfo,
                    request_deserializer=task__info__pb2.Request.FromString,
                    response_serializer=task__info__pb2.Response.SerializeToString,
            ),
            'DeleteVesselInfo': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteVesselInfo,
                    request_deserializer=task__info__pb2.DelVesselInfoSchemas.FromString,
                    response_serializer=task__info__pb2.Response.SerializeToString,
            ),
            'api_taskInfo_VesselInfo_SetVesselInfoStatus_post': grpc.unary_unary_rpc_method_handler(
                    servicer.api_taskInfo_VesselInfo_SetVesselInfoStatus_post,
                    request_deserializer=task__info__pb2.SetVesselInfoStatusSchemas.FromString,
                    response_serializer=task__info__pb2.Response.SerializeToString,
            ),
            'AlarmMessageStart': grpc.unary_unary_rpc_method_handler(
                    servicer.AlarmMessageStart,
                    request_deserializer=task__info__pb2.SetAlarmMessage.FromString,
                    response_serializer=task__info__pb2.Response.SerializeToString,
            ),
            'AlarmMessageStart_bak': grpc.unary_unary_rpc_method_handler(
                    servicer.AlarmMessageStart_bak,
                    request_deserializer=task__info__pb2.SetAlarmMessage.FromString,
                    response_serializer=task__info__pb2.Response.SerializeToString,
            ),
            'AlarmMessageStop': grpc.unary_unary_rpc_method_handler(
                    servicer.AlarmMessageStop,
                    request_deserializer=task__info__pb2.StopAlarmMessage.FromString,
                    response_serializer=task__info__pb2.Response.SerializeToString,
            ),
            'GetAlarmMessage': grpc.unary_unary_rpc_method_handler(
                    servicer.GetAlarmMessage,
                    request_deserializer=task__info__pb2.AlarmMessageSchema.FromString,
                    response_serializer=task__info__pb2.Response.SerializeToString,
            ),
            'SetFmsMessage': grpc.unary_unary_rpc_method_handler(
                    servicer.SetFmsMessage,
                    request_deserializer=task__info__pb2.SetFMSMessage.FromString,
                    response_serializer=task__info__pb2.Response.SerializeToString,
            ),
            'GetFmsMessage': grpc.unary_unary_rpc_method_handler(
                    servicer.GetFmsMessage,
                    request_deserializer=task__info__pb2.AlarmMessageSchema.FromString,
                    response_serializer=task__info__pb2.Response.SerializeToString,
            ),
            'set': grpc.unary_unary_rpc_method_handler(
                    servicer.set,
                    request_deserializer=task__info__pb2.Request.FromString,
                    response_serializer=task__info__pb2.Response.SerializeToString,
            ),
            'api_taskInfo_subTask_get_get': grpc.unary_unary_rpc_method_handler(
                    servicer.api_taskInfo_subTask_get_get,
                    request_deserializer=task__info__pb2.Request.FromString,
                    response_serializer=task__info__pb2.Response.SerializeToString,
            ),
            'api_taskInfo_subTask_clear_post': grpc.unary_unary_rpc_method_handler(
                    servicer.api_taskInfo_subTask_clear_post,
                    request_deserializer=task__info__pb2.Request.FromString,
                    response_serializer=task__info__pb2.Response.SerializeToString,
            ),
            'fenceEvent': grpc.unary_unary_rpc_method_handler(
                    servicer.fenceEvent,
                    request_deserializer=task__info__pb2.CreateFence.FromString,
                    response_serializer=task__info__pb2.Response.SerializeToString,
            ),
            'finish': grpc.unary_unary_rpc_method_handler(
                    servicer.finish,
                    request_deserializer=task__info__pb2.FinishFenceEvent.FromString,
                    response_serializer=task__info__pb2.Response.SerializeToString,
            ),
            'api_taskInfo_fenceEvent_get_post': grpc.unary_unary_rpc_method_handler(
                    servicer.api_taskInfo_fenceEvent_get_post,
                    request_deserializer=task__info__pb2.Request.FromString,
                    response_serializer=task__info__pb2.Response.SerializeToString,
            ),
            'api_taskInfo_taskPool_get_post': grpc.unary_unary_rpc_method_handler(
                    servicer.api_taskInfo_taskPool_get_post,
                    request_deserializer=task__info__pb2.Request.FromString,
                    response_serializer=task__info__pb2.Response.SerializeToString,
            ),
            'add': grpc.unary_unary_rpc_method_handler(
                    servicer.add,
                    request_deserializer=task__info__pb2.Request.FromString,
                    response_serializer=task__info__pb2.Response.SerializeToString,
            ),
            'api_taskInfo_taskPool_update_post': grpc.unary_unary_rpc_method_handler(
                    servicer.api_taskInfo_taskPool_update_post,
                    request_deserializer=task__info__pb2.Request.FromString,
                    response_serializer=task__info__pb2.Response.SerializeToString,
            ),
            'api_taskInfo_taskPool_abort_post': grpc.unary_unary_rpc_method_handler(
                    servicer.api_taskInfo_taskPool_abort_post,
                    request_deserializer=task__info__pb2.Request.FromString,
                    response_serializer=task__info__pb2.Response.SerializeToString,
            ),
            'api_taskInfo_taskPool_runImmediate_post': grpc.unary_unary_rpc_method_handler(
                    servicer.api_taskInfo_taskPool_runImmediate_post,
                    request_deserializer=task__info__pb2.Request.FromString,
                    response_serializer=task__info__pb2.Response.SerializeToString,
            ),
            'api_taskInfo_taskPool_delete_post': grpc.unary_unary_rpc_method_handler(
                    servicer.api_taskInfo_taskPool_delete_post,
                    request_deserializer=task__info__pb2.Request.FromString,
                    response_serializer=task__info__pb2.Response.SerializeToString,
            ),
            'TsRelated': grpc.unary_unary_rpc_method_handler(
                    servicer.TsRelated,
                    request_deserializer=task__info__pb2.Request.FromString,
                    response_serializer=task__info__pb2.Response.SerializeToString,
            ),
            'api_taskInfo_TsRelated_delete_post': grpc.unary_unary_rpc_method_handler(
                    servicer.api_taskInfo_TsRelated_delete_post,
                    request_deserializer=task__info__pb2.Request.FromString,
                    response_serializer=task__info__pb2.Response.SerializeToString,
            ),
            'Edit': grpc.unary_unary_rpc_method_handler(
                    servicer.Edit,
                    request_deserializer=task__info__pb2.Request.FromString,
                    response_serializer=task__info__pb2.Response.SerializeToString,
            ),
            'Get': grpc.unary_unary_rpc_method_handler(
                    servicer.Get,
                    request_deserializer=task__info__pb2.GetTsSchemas.FromString,
                    response_serializer=task__info__pb2.Response.SerializeToString,
            ),
            'api_taskInfo_EquipmentStatus_post': grpc.unary_unary_rpc_method_handler(
                    servicer.api_taskInfo_EquipmentStatus_post,
                    request_deserializer=task__info__pb2.Request.FromString,
                    response_serializer=task__info__pb2.Response.SerializeToString,
            ),
            'api_taskInfo_EquipmentStatus_Get_get': grpc.unary_unary_rpc_method_handler(
                    servicer.api_taskInfo_EquipmentStatus_Get_get,
                    request_deserializer=task__info__pb2.Request.FromString,
                    response_serializer=task__info__pb2.Response.SerializeToString,
            ),
            'api_taskInfo_EquipmentStatus_SpreaderSize_post': grpc.unary_unary_rpc_method_handler(
                    servicer.api_taskInfo_EquipmentStatus_SpreaderSize_post,
                    request_deserializer=task__info__pb2.Request.FromString,
                    response_serializer=task__info__pb2.Response.SerializeToString,
            ),
            'GetSpreaderSize': grpc.unary_unary_rpc_method_handler(
                    servicer.GetSpreaderSize,
                    request_deserializer=task__info__pb2.Request.FromString,
                    response_serializer=task__info__pb2.Response.SerializeToString,
            ),
            'api_taskInfo_PaceGlobal_post': grpc.unary_unary_rpc_method_handler(
                    servicer.api_taskInfo_PaceGlobal_post,
                    request_deserializer=task__info__pb2.Request.FromString,
                    response_serializer=task__info__pb2.Response.SerializeToString,
            ),
            'api_taskInfo_quayCrane_SetLane_post': grpc.unary_unary_rpc_method_handler(
                    servicer.api_taskInfo_quayCrane_SetLane_post,
                    request_deserializer=task__info__pb2.SetLaneInSchema.FromString,
                    response_serializer=task__info__pb2.Response.SerializeToString,
            ),
            'GetLane': grpc.unary_unary_rpc_method_handler(
                    servicer.GetLane,
                    request_deserializer=task__info__pb2.Request.FromString,
                    response_serializer=task__info__pb2.Response.SerializeToString,
            ),
            'preArrive': grpc.unary_unary_rpc_method_handler(
                    servicer.preArrive,
                    request_deserializer=task__info__pb2.PreArriveInSchema.FromString,
                    response_serializer=task__info__pb2.Response.SerializeToString,
            ),
            'ts_switch': grpc.unary_unary_rpc_method_handler(
                    servicer.ts_switch,
                    request_deserializer=task__info__pb2.Request.FromString,
                    response_serializer=task__info__pb2.Response.SerializeToString,
            ),
            'api_taskInfo_ts_switch_post': grpc.unary_unary_rpc_method_handler(
                    servicer.api_taskInfo_ts_switch_post,
                    request_deserializer=task__info__pb2.LockSwitchInSchema.FromString,
                    response_serializer=task__info__pb2.Response.SerializeToString,
            ),
            'sim_start_job': grpc.unary_unary_rpc_method_handler(
                    servicer.sim_start_job,
                    request_deserializer=task__info__pb2.Request.FromString,
                    response_serializer=task__info__pb2.Response.SerializeToString,
            ),
            'fullControl': grpc.unary_unary_rpc_method_handler(
                    servicer.fullControl,
                    request_deserializer=task__info__pb2.FullStopStatus.FromString,
                    response_serializer=task__info__pb2.Response.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'Task_Info.Task_Info', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Task_Info(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def api_taskInfo_maintain_status_post(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Task_Info.Task_Info/api_taskInfo_maintain_status_post',
            task__info__pb2.Request.SerializeToString,
            task__info__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def deleteAllArea(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Task_Info.Task_Info/deleteAllArea',
            task__info__pb2.Request.SerializeToString,
            task__info__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def abortAllJob(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Task_Info.Task_Info/abortAllJob',
            task__info__pb2.Request.SerializeToString,
            task__info__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def kvStore(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Task_Info.Task_Info/kvStore',
            task__info__pb2.Request.SerializeToString,
            task__info__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def api_taskInfo_kvStore_post(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Task_Info.Task_Info/api_taskInfo_kvStore_post',
            task__info__pb2.SetKvStoreInSchema.SerializeToString,
            task__info__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def api_taskInfo_kvStore_delete_post(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Task_Info.Task_Info/api_taskInfo_kvStore_delete_post',
            task__info__pb2.DeleteKvStore.SerializeToString,
            task__info__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def api_taskInfo_kvStore_list_get(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Task_Info.Task_Info/api_taskInfo_kvStore_list_get',
            task__info__pb2.Request.SerializeToString,
            task__info__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def api_taskInfo_kvStore_list_post(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Task_Info.Task_Info/api_taskInfo_kvStore_list_post',
            task__info__pb2.SetKvStoreListInSchema.SerializeToString,
            task__info__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def listFind(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Task_Info.Task_Info/listFind',
            task__info__pb2.Request.SerializeToString,
            task__info__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def process(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Task_Info.Task_Info/process',
            task__info__pb2.Request.SerializeToString,
            task__info__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def api_taskInfo_process_post(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Task_Info.Task_Info/api_taskInfo_process_post',
            task__info__pb2.SetBusProcessInSchema.SerializeToString,
            task__info__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def api_taskInfo_containerInfo_get(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Task_Info.Task_Info/api_taskInfo_containerInfo_get',
            task__info__pb2.Request.SerializeToString,
            task__info__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def api_taskInfo_containerInfo_post(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Task_Info.Task_Info/api_taskInfo_containerInfo_post',
            task__info__pb2.SetContainerInfoInSchema.SerializeToString,
            task__info__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def create(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Task_Info.Task_Info/create',
            task__info__pb2.Request.SerializeToString,
            task__info__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def api_taskInfo_vehicleJob_status_post(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Task_Info.Task_Info/api_taskInfo_vehicleJob_status_post',
            task__info__pb2.Request.SerializeToString,
            task__info__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def stage(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Task_Info.Task_Info/stage',
            task__info__pb2.Request.SerializeToString,
            task__info__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def businessKey(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Task_Info.Task_Info/businessKey',
            task__info__pb2.Request.SerializeToString,
            task__info__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def api_taskInfo_vehicleJob_get(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Task_Info.Task_Info/api_taskInfo_vehicleJob_get',
            task__info__pb2.Request.SerializeToString,
            task__info__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def get(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Task_Info.Task_Info/get',
            task__info__pb2.Request.SerializeToString,
            task__info__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def getStd(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Task_Info.Task_Info/getStd',
            task__info__pb2.Request.SerializeToString,
            task__info__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def getByMission(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Task_Info.Task_Info/getByMission',
            task__info__pb2.Request.SerializeToString,
            task__info__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def api_taskInfo_vehicleJob_abort_post(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Task_Info.Task_Info/api_taskInfo_vehicleJob_abort_post',
            task__info__pb2.Request.SerializeToString,
            task__info__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def updateJobDest(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Task_Info.Task_Info/updateJobDest',
            task__info__pb2.UpdateJobDest.SerializeToString,
            task__info__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def updatePlanContainers(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Task_Info.Task_Info/updatePlanContainers',
            task__info__pb2.UpdatePlanContainers.SerializeToString,
            task__info__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def api_taskInfo_vehicleJob_complete_post(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Task_Info.Task_Info/api_taskInfo_vehicleJob_complete_post',
            task__info__pb2.Request.SerializeToString,
            task__info__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def jobMission(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Task_Info.Task_Info/jobMission',
            task__info__pb2.Request.SerializeToString,
            task__info__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def api_taskInfo_vehicleJob_jobMission_post(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Task_Info.Task_Info/api_taskInfo_vehicleJob_jobMission_post',
            task__info__pb2.Request.SerializeToString,
            task__info__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def stageTag(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Task_Info.Task_Info/stageTag',
            task__info__pb2.Request.SerializeToString,
            task__info__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def api_taskInfo_vehicleJob_resendJob_post(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Task_Info.Task_Info/api_taskInfo_vehicleJob_resendJob_post',
            task__info__pb2.ResendJobPost.SerializeToString,
            task__info__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def api_taskInfo_vehicleJob_delete_post(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Task_Info.Task_Info/api_taskInfo_vehicleJob_delete_post',
            task__info__pb2.DeleteJobPost.SerializeToString,
            task__info__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def api_taskInfo_vehicleJob_query_post(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Task_Info.Task_Info/api_taskInfo_vehicleJob_query_post',
            task__info__pb2.QueryJobPost.SerializeToString,
            task__info__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def newest(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Task_Info.Task_Info/newest',
            task__info__pb2.Request.SerializeToString,
            task__info__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def all_newest_job(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Task_Info.Task_Info/all_newest_job',
            task__info__pb2.Request.SerializeToString,
            task__info__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def api_taskInfo_vehicleJob_all_current_job_get(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Task_Info.Task_Info/api_taskInfo_vehicleJob_all_current_job_get',
            task__info__pb2.Request.SerializeToString,
            task__info__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def api_taskInfo_vehicleJob_query_all_post(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Task_Info.Task_Info/api_taskInfo_vehicleJob_query_all_post',
            task__info__pb2.QueryJobAllPost.SerializeToString,
            task__info__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def all_newest_job_filter(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Task_Info.Task_Info/all_newest_job_filter',
            task__info__pb2.Request.SerializeToString,
            task__info__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def virtual_points(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Task_Info.Task_Info/virtual_points',
            task__info__pb2.Request.SerializeToString,
            task__info__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def api_taskInfo_vehicleJob_virtual_points_post(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Task_Info.Task_Info/api_taskInfo_vehicleJob_virtual_points_post',
            task__info__pb2.VirtualPointsPost.SerializeToString,
            task__info__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def workflowConfig(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Task_Info.Task_Info/workflowConfig',
            task__info__pb2.Request.SerializeToString,
            task__info__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def api_taskInfo_workflowConfig_post(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Task_Info.Task_Info/api_taskInfo_workflowConfig_post',
            task__info__pb2.Request.SerializeToString,
            task__info__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def api_taskInfo_lockArea_get(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Task_Info.Task_Info/api_taskInfo_lockArea_get',
            task__info__pb2.Request.SerializeToString,
            task__info__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def api_taskInfo_lockArea_post(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Task_Info.Task_Info/api_taskInfo_lockArea_post',
            task__info__pb2.Request.SerializeToString,
            task__info__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def api_taskInfo_lockArea_delete_post(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Task_Info.Task_Info/api_taskInfo_lockArea_delete_post',
            task__info__pb2.Request.SerializeToString,
            task__info__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def api_taskInfo_lockArea_deleteByTag_post(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Task_Info.Task_Info/api_taskInfo_lockArea_deleteByTag_post',
            task__info__pb2.Request.SerializeToString,
            task__info__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def api_taskInfo_lockArea_change_post(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Task_Info.Task_Info/api_taskInfo_lockArea_change_post',
            task__info__pb2.Request.SerializeToString,
            task__info__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def changeByTag(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Task_Info.Task_Info/changeByTag',
            task__info__pb2.Request.SerializeToString,
            task__info__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def api_taskInfo_VesselInfo_SetVesselInfo_post(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Task_Info.Task_Info/api_taskInfo_VesselInfo_SetVesselInfo_post',
            task__info__pb2.SetVesselInfoSchemas.SerializeToString,
            task__info__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def api_taskInfo_VesselInfo_EditVesselInfo_post(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Task_Info.Task_Info/api_taskInfo_VesselInfo_EditVesselInfo_post',
            task__info__pb2.Request.SerializeToString,
            task__info__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetVesselInfo(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Task_Info.Task_Info/GetVesselInfo',
            task__info__pb2.Request.SerializeToString,
            task__info__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteVesselInfo(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Task_Info.Task_Info/DeleteVesselInfo',
            task__info__pb2.DelVesselInfoSchemas.SerializeToString,
            task__info__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def api_taskInfo_VesselInfo_SetVesselInfoStatus_post(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Task_Info.Task_Info/api_taskInfo_VesselInfo_SetVesselInfoStatus_post',
            task__info__pb2.SetVesselInfoStatusSchemas.SerializeToString,
            task__info__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def AlarmMessageStart(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Task_Info.Task_Info/AlarmMessageStart',
            task__info__pb2.SetAlarmMessage.SerializeToString,
            task__info__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def AlarmMessageStart_bak(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Task_Info.Task_Info/AlarmMessageStart_bak',
            task__info__pb2.SetAlarmMessage.SerializeToString,
            task__info__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def AlarmMessageStop(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Task_Info.Task_Info/AlarmMessageStop',
            task__info__pb2.StopAlarmMessage.SerializeToString,
            task__info__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetAlarmMessage(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Task_Info.Task_Info/GetAlarmMessage',
            task__info__pb2.AlarmMessageSchema.SerializeToString,
            task__info__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetFmsMessage(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Task_Info.Task_Info/SetFmsMessage',
            task__info__pb2.SetFMSMessage.SerializeToString,
            task__info__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetFmsMessage(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Task_Info.Task_Info/GetFmsMessage',
            task__info__pb2.AlarmMessageSchema.SerializeToString,
            task__info__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def set(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Task_Info.Task_Info/set',
            task__info__pb2.Request.SerializeToString,
            task__info__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def api_taskInfo_subTask_get_get(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Task_Info.Task_Info/api_taskInfo_subTask_get_get',
            task__info__pb2.Request.SerializeToString,
            task__info__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def api_taskInfo_subTask_clear_post(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Task_Info.Task_Info/api_taskInfo_subTask_clear_post',
            task__info__pb2.Request.SerializeToString,
            task__info__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def fenceEvent(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Task_Info.Task_Info/fenceEvent',
            task__info__pb2.CreateFence.SerializeToString,
            task__info__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def finish(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Task_Info.Task_Info/finish',
            task__info__pb2.FinishFenceEvent.SerializeToString,
            task__info__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def api_taskInfo_fenceEvent_get_post(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Task_Info.Task_Info/api_taskInfo_fenceEvent_get_post',
            task__info__pb2.Request.SerializeToString,
            task__info__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def api_taskInfo_taskPool_get_post(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Task_Info.Task_Info/api_taskInfo_taskPool_get_post',
            task__info__pb2.Request.SerializeToString,
            task__info__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def add(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Task_Info.Task_Info/add',
            task__info__pb2.Request.SerializeToString,
            task__info__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def api_taskInfo_taskPool_update_post(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Task_Info.Task_Info/api_taskInfo_taskPool_update_post',
            task__info__pb2.Request.SerializeToString,
            task__info__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def api_taskInfo_taskPool_abort_post(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Task_Info.Task_Info/api_taskInfo_taskPool_abort_post',
            task__info__pb2.Request.SerializeToString,
            task__info__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def api_taskInfo_taskPool_runImmediate_post(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Task_Info.Task_Info/api_taskInfo_taskPool_runImmediate_post',
            task__info__pb2.Request.SerializeToString,
            task__info__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def api_taskInfo_taskPool_delete_post(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Task_Info.Task_Info/api_taskInfo_taskPool_delete_post',
            task__info__pb2.Request.SerializeToString,
            task__info__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def TsRelated(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Task_Info.Task_Info/TsRelated',
            task__info__pb2.Request.SerializeToString,
            task__info__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def api_taskInfo_TsRelated_delete_post(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Task_Info.Task_Info/api_taskInfo_TsRelated_delete_post',
            task__info__pb2.Request.SerializeToString,
            task__info__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Edit(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Task_Info.Task_Info/Edit',
            task__info__pb2.Request.SerializeToString,
            task__info__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Get(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Task_Info.Task_Info/Get',
            task__info__pb2.GetTsSchemas.SerializeToString,
            task__info__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def api_taskInfo_EquipmentStatus_post(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Task_Info.Task_Info/api_taskInfo_EquipmentStatus_post',
            task__info__pb2.Request.SerializeToString,
            task__info__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def api_taskInfo_EquipmentStatus_Get_get(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Task_Info.Task_Info/api_taskInfo_EquipmentStatus_Get_get',
            task__info__pb2.Request.SerializeToString,
            task__info__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def api_taskInfo_EquipmentStatus_SpreaderSize_post(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Task_Info.Task_Info/api_taskInfo_EquipmentStatus_SpreaderSize_post',
            task__info__pb2.Request.SerializeToString,
            task__info__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetSpreaderSize(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Task_Info.Task_Info/GetSpreaderSize',
            task__info__pb2.Request.SerializeToString,
            task__info__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def api_taskInfo_PaceGlobal_post(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Task_Info.Task_Info/api_taskInfo_PaceGlobal_post',
            task__info__pb2.Request.SerializeToString,
            task__info__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def api_taskInfo_quayCrane_SetLane_post(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Task_Info.Task_Info/api_taskInfo_quayCrane_SetLane_post',
            task__info__pb2.SetLaneInSchema.SerializeToString,
            task__info__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetLane(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Task_Info.Task_Info/GetLane',
            task__info__pb2.Request.SerializeToString,
            task__info__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def preArrive(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Task_Info.Task_Info/preArrive',
            task__info__pb2.PreArriveInSchema.SerializeToString,
            task__info__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ts_switch(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Task_Info.Task_Info/ts_switch',
            task__info__pb2.Request.SerializeToString,
            task__info__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def api_taskInfo_ts_switch_post(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Task_Info.Task_Info/api_taskInfo_ts_switch_post',
            task__info__pb2.LockSwitchInSchema.SerializeToString,
            task__info__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def sim_start_job(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Task_Info.Task_Info/sim_start_job',
            task__info__pb2.Request.SerializeToString,
            task__info__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def fullControl(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Task_Info.Task_Info/fullControl',
            task__info__pb2.FullStopStatus.SerializeToString,
            task__info__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

syntax = "proto3";
import "google/protobuf/any.proto";

package Task_Executor;

service Task_Executor {
  rpc message_event_start_post (VehicleOrderSchema) returns (Response) {}
  rpc abort (Request) returns (Response) {}
  rpc rch (RchSchema) returns (Response) {}
  rpc update_qc_task (UpdateQcTaskSchema) returns (Response) {}
  rpc event (EventListenerInSchema) returns (Response) {}
  rpc cancel_camunda_process (CancelCamundaSchema) returns (Response) {}
  rpc boundary_event (BoundaryEventSchema) returns (Response) {}
  rpc skip (Request) returns (Response) {}
  rpc activity (Request) returns (Response) {}
  rpc service_task (ServiceTaskInSchema) returns (Response) {}
  rpc cycle_event (CycleEventSchema) returns (Response) {}
  rpc event_driven (EventDrivenSchema) returns (Response) {}
  rpc abort_all_event_process (Request) returns (Response) {}
}

message Request {
  google.protobuf.Any data = 1;
}

message Response {
  uint32 code = 1;
  string message = 2;
  google.protobuf.Any data = 3;
  string timestamp = 4;
  uint32 duration = 5;
}

// 定义参数结构体

message BoundaryEventSchema {
  string event_name = 1;
  string vehicle_id = 2;
  google.protobuf.Any data = 3;
}

message CancelCamundaSchema {
  string vehicle_id = 1;
  string instance_id = 2;
  string cancel_reason = 3;
}

message CreateSuccessSchema {
  google.protobuf.Any data = 1;
  sint32 code = 2;
  string msg = 3;
  string error = 4;
}

message CycleEventSchema {
  string callback_module_name = 1;
  map<string, google.protobuf.Any> callback_params = 2;
  string callback_path = 3;
  string callback_method = 4;
  bool is_notify_all = 5;
  string event_name = 6;
  string event_type = 7;
  sint32 time_cycle_pt = 8;
}

message DestinationSchema {
  LogicalLocation logicalLocation = 1;
}

message EventDrivenSchema {
  string callback_module_name = 1;
  map<string, google.protobuf.Any> callback_params = 2;
  string callback_path = 3;
  string callback_method = 4;
  bool is_notify_all = 5;
  string event_name = 6;
  string event_type = 7;
}

message EventListenerInSchema {
  string vin = 1;
  string vehicleMissionId = 2;
  string jobId = 3;
  string origin = 4;
  string timeStamp = 5;
  map<string, google.protobuf.Any> data = 6;
}

message GetActivityNode {
  google.protobuf.Any data = 1;
  sint32 code = 2;
  string msg = 3;
  string error = 4;
}

message HTTPValidationError {
  repeated ValidationError errors = 1;
}

message LogicalLocation {
  string area = 1;
  string block = 2;
  sint32 lane = 3;
  sint32 stack = 4;
  sint32 tier = 5;
  string orientation = 6;
}

message PlannedContainerDestinationListSchema {
  string area = 1;
  string block = 2;
  sint32 lane = 3;
  sint32 stack = 4;
  sint32 tier = 5;
  string orientation = 6;
  string uniqueObjectID = 7;
  string destDoorDirection = 8;
  string containerNum = 9;
  string containerISO = 10;
  float containerLengthFT = 11;
  float containerWeightKG = 12;
  string containerStack = 13;
  float containerHeight = 14;
  float containerWidth = 15;
  bool targetReady = 16;
  map<string, google.protobuf.Any> portLocation = 17;
  string reeferStatus = 18;
  string relativePos = 19;
  string associatedTwinContainer_id = 20;
}

message RchSchema {
  sint32 offset = 1;
  string vin = 2;
  string craneID = 3;
  string timeStamp = 4;
}

message ServiceTaskInSchema {
  string activityId = 1;
  string processDefinitionKey = 2;
  string businessKey = 3;
  string tenantId = 4;
  string topicName = 5;
  map<string, google.protobuf.Any> variables = 6;
  map<string, google.protobuf.Any> serviceEnv = 7;
}

message ServiceTaskOutSchema {
  map<string, google.protobuf.Any> data = 1;
  sint32 code = 2;
  string msg = 3;
  string error = 4;
}

message UpdateQcTaskSchema {
  string qcId = 1;
  string spreadSize = 2;
}

message ValidationError {
  repeated sint32 loc = 1;
  string msg = 2;
  string type = 3;
}

message VehicleOrderSchema {
  string messageName = 1;
  string messageUniqueId = 2;
  string messageTimestamp = 3;
  bool executeTogether = 4;
  string uniqueOrderID = 5;
  string origin = 6;
  float X = 7;
  float Y = 8;
  float XY_heading = 9;
  string craneID = 10;
  string moveType = 11;
  string jobType = 12;
  string vehicleID = 13;
  sint32 bidirection = 14;
  map<string, google.protobuf.Any> job_content = 15;
  string passingLocation = 16;
  string movementType = 17;
  DestinationSchema destination = 18;
  repeated PlannedContainerDestinationListSchema plannedContainerDestinationList = 19;
  string vesselVisitID = 20;
  string mode = 21;
}
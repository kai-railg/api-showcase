# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from . import gui_server_pb2 as gui__server__pb2


class Gui_ServerStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.authentication = channel.unary_unary(
                '/Gui_Server.Gui_Server/authentication',
                request_serializer=gui__server__pb2.LoginInSchema.SerializeToString,
                response_deserializer=gui__server__pb2.Response.FromString,
                )
        self.auth = channel.unary_unary(
                '/Gui_Server.Gui_Server/auth',
                request_serializer=gui__server__pb2.Request.SerializeToString,
                response_deserializer=gui__server__pb2.Response.FromString,
                )
        self.update_passwd = channel.unary_unary(
                '/Gui_Server.Gui_Server/update_passwd',
                request_serializer=gui__server__pb2.UpdatePasswdInSchema.SerializeToString,
                response_deserializer=gui__server__pb2.Response.FromString,
                )
        self.user = channel.unary_unary(
                '/Gui_Server.Gui_Server/user',
                request_serializer=gui__server__pb2.CreateUserInSchema.SerializeToString,
                response_deserializer=gui__server__pb2.Response.FromString,
                )
        self.user_put = channel.unary_unary(
                '/Gui_Server.Gui_Server/user_put',
                request_serializer=gui__server__pb2.UpdateUserInSchema.SerializeToString,
                response_deserializer=gui__server__pb2.Response.FromString,
                )
        self.user_get = channel.unary_unary(
                '/Gui_Server.Gui_Server/user_get',
                request_serializer=gui__server__pb2.Request.SerializeToString,
                response_deserializer=gui__server__pb2.Response.FromString,
                )
        self.user_delete = channel.unary_unary(
                '/Gui_Server.Gui_Server/user_delete',
                request_serializer=gui__server__pb2.Request.SerializeToString,
                response_deserializer=gui__server__pb2.Response.FromString,
                )
        self.list = channel.unary_unary(
                '/Gui_Server.Gui_Server/list',
                request_serializer=gui__server__pb2.Request.SerializeToString,
                response_deserializer=gui__server__pb2.Response.FromString,
                )
        self.all = channel.unary_unary(
                '/Gui_Server.Gui_Server/all',
                request_serializer=gui__server__pb2.Request.SerializeToString,
                response_deserializer=gui__server__pb2.Response.FromString,
                )
        self.group = channel.unary_unary(
                '/Gui_Server.Gui_Server/group',
                request_serializer=gui__server__pb2.CreateGroupInSchema.SerializeToString,
                response_deserializer=gui__server__pb2.Response.FromString,
                )
        self.group_put = channel.unary_unary(
                '/Gui_Server.Gui_Server/group_put',
                request_serializer=gui__server__pb2.UpdateGroupInSchema.SerializeToString,
                response_deserializer=gui__server__pb2.Response.FromString,
                )
        self.group_get = channel.unary_unary(
                '/Gui_Server.Gui_Server/group_get',
                request_serializer=gui__server__pb2.Request.SerializeToString,
                response_deserializer=gui__server__pb2.Response.FromString,
                )
        self.group_delete = channel.unary_unary(
                '/Gui_Server.Gui_Server/group_delete',
                request_serializer=gui__server__pb2.Request.SerializeToString,
                response_deserializer=gui__server__pb2.Response.FromString,
                )
        self.group_all_get = channel.unary_unary(
                '/Gui_Server.Gui_Server/group_all_get',
                request_serializer=gui__server__pb2.Request.SerializeToString,
                response_deserializer=gui__server__pb2.Response.FromString,
                )
        self.permission = channel.unary_unary(
                '/Gui_Server.Gui_Server/permission',
                request_serializer=gui__server__pb2.CreatePermissionInSchema.SerializeToString,
                response_deserializer=gui__server__pb2.Response.FromString,
                )
        self.permission_put = channel.unary_unary(
                '/Gui_Server.Gui_Server/permission_put',
                request_serializer=gui__server__pb2.UpdatePermissionInSchema.SerializeToString,
                response_deserializer=gui__server__pb2.Response.FromString,
                )
        self.permission_get = channel.unary_unary(
                '/Gui_Server.Gui_Server/permission_get',
                request_serializer=gui__server__pb2.Request.SerializeToString,
                response_deserializer=gui__server__pb2.Response.FromString,
                )
        self.permission_delete = channel.unary_unary(
                '/Gui_Server.Gui_Server/permission_delete',
                request_serializer=gui__server__pb2.Request.SerializeToString,
                response_deserializer=gui__server__pb2.Response.FromString,
                )
        self.permission_all_get = channel.unary_unary(
                '/Gui_Server.Gui_Server/permission_all_get',
                request_serializer=gui__server__pb2.Request.SerializeToString,
                response_deserializer=gui__server__pb2.Response.FromString,
                )
        self.permission_list_get = channel.unary_unary(
                '/Gui_Server.Gui_Server/permission_list_get',
                request_serializer=gui__server__pb2.Request.SerializeToString,
                response_deserializer=gui__server__pb2.Response.FromString,
                )
        self.download = channel.unary_unary(
                '/Gui_Server.Gui_Server/download',
                request_serializer=gui__server__pb2.Request.SerializeToString,
                response_deserializer=gui__server__pb2.Response.FromString,
                )
        self.lockArea = channel.unary_unary(
                '/Gui_Server.Gui_Server/lockArea',
                request_serializer=gui__server__pb2.Request.SerializeToString,
                response_deserializer=gui__server__pb2.Response.FromString,
                )
        self.api_taskInfo_lockArea_post = channel.unary_unary(
                '/Gui_Server.Gui_Server/api_taskInfo_lockArea_post',
                request_serializer=gui__server__pb2.Request.SerializeToString,
                response_deserializer=gui__server__pb2.Response.FromString,
                )
        self.delete = channel.unary_unary(
                '/Gui_Server.Gui_Server/delete',
                request_serializer=gui__server__pb2.Request.SerializeToString,
                response_deserializer=gui__server__pb2.Response.FromString,
                )
        self.api_taskInfo_lockArea_delete_post = channel.unary_unary(
                '/Gui_Server.Gui_Server/api_taskInfo_lockArea_delete_post',
                request_serializer=gui__server__pb2.Request.SerializeToString,
                response_deserializer=gui__server__pb2.Response.FromString,
                )
        self.deleteByTag = channel.unary_unary(
                '/Gui_Server.Gui_Server/deleteByTag',
                request_serializer=gui__server__pb2.Request.SerializeToString,
                response_deserializer=gui__server__pb2.Response.FromString,
                )
        self.api_taskInfo_lockArea_deleteByTag_post = channel.unary_unary(
                '/Gui_Server.Gui_Server/api_taskInfo_lockArea_deleteByTag_post',
                request_serializer=gui__server__pb2.Request.SerializeToString,
                response_deserializer=gui__server__pb2.Response.FromString,
                )
        self.change = channel.unary_unary(
                '/Gui_Server.Gui_Server/change',
                request_serializer=gui__server__pb2.Request.SerializeToString,
                response_deserializer=gui__server__pb2.Response.FromString,
                )
        self.api_taskInfo_lockArea_change_post = channel.unary_unary(
                '/Gui_Server.Gui_Server/api_taskInfo_lockArea_change_post',
                request_serializer=gui__server__pb2.Request.SerializeToString,
                response_deserializer=gui__server__pb2.Response.FromString,
                )
        self.resendJob = channel.unary_unary(
                '/Gui_Server.Gui_Server/resendJob',
                request_serializer=gui__server__pb2.Request.SerializeToString,
                response_deserializer=gui__server__pb2.Response.FromString,
                )
        self.api_taskInfo_vehicleJob_resendJob_post = channel.unary_unary(
                '/Gui_Server.Gui_Server/api_taskInfo_vehicleJob_resendJob_post',
                request_serializer=gui__server__pb2.Request.SerializeToString,
                response_deserializer=gui__server__pb2.Response.FromString,
                )
        self.message_event_start_get = channel.unary_unary(
                '/Gui_Server.Gui_Server/message_event_start_get',
                request_serializer=gui__server__pb2.Request.SerializeToString,
                response_deserializer=gui__server__pb2.Response.FromString,
                )
        self.message_event_start_post = channel.unary_unary(
                '/Gui_Server.Gui_Server/message_event_start_post',
                request_serializer=gui__server__pb2.Request.SerializeToString,
                response_deserializer=gui__server__pb2.Response.FromString,
                )
        self.message_event_abort_get = channel.unary_unary(
                '/Gui_Server.Gui_Server/message_event_abort_get',
                request_serializer=gui__server__pb2.Request.SerializeToString,
                response_deserializer=gui__server__pb2.Response.FromString,
                )
        self.message_event_abort_post = channel.unary_unary(
                '/Gui_Server.Gui_Server/message_event_abort_post',
                request_serializer=gui__server__pb2.Request.SerializeToString,
                response_deserializer=gui__server__pb2.Response.FromString,
                )
        self.api_taskInfo_vehicleJob_delete_get = channel.unary_unary(
                '/Gui_Server.Gui_Server/api_taskInfo_vehicleJob_delete_get',
                request_serializer=gui__server__pb2.Request.SerializeToString,
                response_deserializer=gui__server__pb2.Response.FromString,
                )
        self.api_taskInfo_vehicleJob_delete_post = channel.unary_unary(
                '/Gui_Server.Gui_Server/api_taskInfo_vehicleJob_delete_post',
                request_serializer=gui__server__pb2.Request.SerializeToString,
                response_deserializer=gui__server__pb2.Response.FromString,
                )
        self.runImmediate = channel.unary_unary(
                '/Gui_Server.Gui_Server/runImmediate',
                request_serializer=gui__server__pb2.Request.SerializeToString,
                response_deserializer=gui__server__pb2.Response.FromString,
                )
        self.api_taskInfo_taskPool_runImmediate_post = channel.unary_unary(
                '/Gui_Server.Gui_Server/api_taskInfo_taskPool_runImmediate_post',
                request_serializer=gui__server__pb2.Request.SerializeToString,
                response_deserializer=gui__server__pb2.Response.FromString,
                )
        self.api_taskInfo_taskPool_abort_get = channel.unary_unary(
                '/Gui_Server.Gui_Server/api_taskInfo_taskPool_abort_get',
                request_serializer=gui__server__pb2.Request.SerializeToString,
                response_deserializer=gui__server__pb2.Response.FromString,
                )
        self.api_taskInfo_taskPool_abort_post = channel.unary_unary(
                '/Gui_Server.Gui_Server/api_taskInfo_taskPool_abort_post',
                request_serializer=gui__server__pb2.Request.SerializeToString,
                response_deserializer=gui__server__pb2.Response.FromString,
                )
        self.trailerStatus = channel.unary_unary(
                '/Gui_Server.Gui_Server/trailerStatus',
                request_serializer=gui__server__pb2.Request.SerializeToString,
                response_deserializer=gui__server__pb2.Response.FromString,
                )
        self.api_deviceInfo_vehicleStatus_trailerStatus_post = channel.unary_unary(
                '/Gui_Server.Gui_Server/api_deviceInfo_vehicleStatus_trailerStatus_post',
                request_serializer=gui__server__pb2.Request.SerializeToString,
                response_deserializer=gui__server__pb2.Response.FromString,
                )
        self.mode = channel.unary_unary(
                '/Gui_Server.Gui_Server/mode',
                request_serializer=gui__server__pb2.Request.SerializeToString,
                response_deserializer=gui__server__pb2.Response.FromString,
                )
        self.api_deviceInfo_vehicleStatus_mode_post = channel.unary_unary(
                '/Gui_Server.Gui_Server/api_deviceInfo_vehicleStatus_mode_post',
                request_serializer=gui__server__pb2.Request.SerializeToString,
                response_deserializer=gui__server__pb2.Response.FromString,
                )
        self.containerInfo = channel.unary_unary(
                '/Gui_Server.Gui_Server/containerInfo',
                request_serializer=gui__server__pb2.Request.SerializeToString,
                response_deserializer=gui__server__pb2.Response.FromString,
                )
        self.api_taskInfo_containerInfo_post = channel.unary_unary(
                '/Gui_Server.Gui_Server/api_taskInfo_containerInfo_post',
                request_serializer=gui__server__pb2.Request.SerializeToString,
                response_deserializer=gui__server__pb2.Response.FromString,
                )
        self.message_event_rch_get = channel.unary_unary(
                '/Gui_Server.Gui_Server/message_event_rch_get',
                request_serializer=gui__server__pb2.Request.SerializeToString,
                response_deserializer=gui__server__pb2.Response.FromString,
                )
        self.message_event_rch_post = channel.unary_unary(
                '/Gui_Server.Gui_Server/message_event_rch_post',
                request_serializer=gui__server__pb2.Request.SerializeToString,
                response_deserializer=gui__server__pb2.Response.FromString,
                )
        self.query = channel.unary_unary(
                '/Gui_Server.Gui_Server/query',
                request_serializer=gui__server__pb2.Request.SerializeToString,
                response_deserializer=gui__server__pb2.Response.FromString,
                )
        self.fms_area_inventory_query_post = channel.unary_unary(
                '/Gui_Server.Gui_Server/fms_area_inventory_query_post',
                request_serializer=gui__server__pb2.Request.SerializeToString,
                response_deserializer=gui__server__pb2.Response.FromString,
                )
        self.api_vehicleManager_power_get = channel.unary_unary(
                '/Gui_Server.Gui_Server/api_vehicleManager_power_get',
                request_serializer=gui__server__pb2.Request.SerializeToString,
                response_deserializer=gui__server__pb2.Response.FromString,
                )
        self.api_vehicleManager_power_post = channel.unary_unary(
                '/Gui_Server.Gui_Server/api_vehicleManager_power_post',
                request_serializer=gui__server__pb2.Request.SerializeToString,
                response_deserializer=gui__server__pb2.Response.FromString,
                )
        self.api_vehicleManager_handshake_get = channel.unary_unary(
                '/Gui_Server.Gui_Server/api_vehicleManager_handshake_get',
                request_serializer=gui__server__pb2.Request.SerializeToString,
                response_deserializer=gui__server__pb2.Response.FromString,
                )
        self.api_vehicleManager_handshake_post = channel.unary_unary(
                '/Gui_Server.Gui_Server/api_vehicleManager_handshake_post',
                request_serializer=gui__server__pb2.Request.SerializeToString,
                response_deserializer=gui__server__pb2.Response.FromString,
                )
        self.SetOperation = channel.unary_unary(
                '/Gui_Server.Gui_Server/SetOperation',
                request_serializer=gui__server__pb2.Request.SerializeToString,
                response_deserializer=gui__server__pb2.Response.FromString,
                )
        self.api_deviceInfo_vehicleStatus_SetOperation_post = channel.unary_unary(
                '/Gui_Server.Gui_Server/api_deviceInfo_vehicleStatus_SetOperation_post',
                request_serializer=gui__server__pb2.Request.SerializeToString,
                response_deserializer=gui__server__pb2.Response.FromString,
                )
        self.api_vehicleManager_report_speed_ratio_get = channel.unary_unary(
                '/Gui_Server.Gui_Server/api_vehicleManager_report_speed_ratio_get',
                request_serializer=gui__server__pb2.Request.SerializeToString,
                response_deserializer=gui__server__pb2.Response.FromString,
                )
        self.api_vehicleManager_report_speed_ratio_post = channel.unary_unary(
                '/Gui_Server.Gui_Server/api_vehicleManager_report_speed_ratio_post',
                request_serializer=gui__server__pb2.Request.SerializeToString,
                response_deserializer=gui__server__pb2.Response.FromString,
                )
        self.api_container_InventoryUpdate_get = channel.unary_unary(
                '/Gui_Server.Gui_Server/api_container_InventoryUpdate_get',
                request_serializer=gui__server__pb2.Request.SerializeToString,
                response_deserializer=gui__server__pb2.Response.FromString,
                )
        self.api_container_InventoryUpdate_post = channel.unary_unary(
                '/Gui_Server.Gui_Server/api_container_InventoryUpdate_post',
                request_serializer=gui__server__pb2.Request.SerializeToString,
                response_deserializer=gui__server__pb2.Response.FromString,
                )
        self.SetVesselInfoStatus = channel.unary_unary(
                '/Gui_Server.Gui_Server/SetVesselInfoStatus',
                request_serializer=gui__server__pb2.Request.SerializeToString,
                response_deserializer=gui__server__pb2.Response.FromString,
                )
        self.api_taskInfo_VesselInfo_SetVesselInfoStatus_post = channel.unary_unary(
                '/Gui_Server.Gui_Server/api_taskInfo_VesselInfo_SetVesselInfoStatus_post',
                request_serializer=gui__server__pb2.Request.SerializeToString,
                response_deserializer=gui__server__pb2.Response.FromString,
                )
        self.query_all = channel.unary_unary(
                '/Gui_Server.Gui_Server/query_all',
                request_serializer=gui__server__pb2.Request.SerializeToString,
                response_deserializer=gui__server__pb2.Response.FromString,
                )
        self.api_taskInfo_vehicleJob_query_all_post = channel.unary_unary(
                '/Gui_Server.Gui_Server/api_taskInfo_vehicleJob_query_all_post',
                request_serializer=gui__server__pb2.Request.SerializeToString,
                response_deserializer=gui__server__pb2.Response.FromString,
                )
        self.PaceGlobal = channel.unary_unary(
                '/Gui_Server.Gui_Server/PaceGlobal',
                request_serializer=gui__server__pb2.Request.SerializeToString,
                response_deserializer=gui__server__pb2.Response.FromString,
                )
        self.api_taskInfo_PaceGlobal_post = channel.unary_unary(
                '/Gui_Server.Gui_Server/api_taskInfo_PaceGlobal_post',
                request_serializer=gui__server__pb2.Request.SerializeToString,
                response_deserializer=gui__server__pb2.Response.FromString,
                )
        self.SetLane = channel.unary_unary(
                '/Gui_Server.Gui_Server/SetLane',
                request_serializer=gui__server__pb2.Request.SerializeToString,
                response_deserializer=gui__server__pb2.Response.FromString,
                )
        self.api_taskInfo_quayCrane_SetLane_post = channel.unary_unary(
                '/Gui_Server.Gui_Server/api_taskInfo_quayCrane_SetLane_post',
                request_serializer=gui__server__pb2.Request.SerializeToString,
                response_deserializer=gui__server__pb2.Response.FromString,
                )
        self.message_event_update_qc_task_get = channel.unary_unary(
                '/Gui_Server.Gui_Server/message_event_update_qc_task_get',
                request_serializer=gui__server__pb2.Request.SerializeToString,
                response_deserializer=gui__server__pb2.Response.FromString,
                )
        self.message_event_update_qc_task_post = channel.unary_unary(
                '/Gui_Server.Gui_Server/message_event_update_qc_task_post',
                request_serializer=gui__server__pb2.Request.SerializeToString,
                response_deserializer=gui__server__pb2.Response.FromString,
                )
        self.vehicleJob = channel.unary_unary(
                '/Gui_Server.Gui_Server/vehicleJob',
                request_serializer=gui__server__pb2.Request.SerializeToString,
                response_deserializer=gui__server__pb2.Response.FromString,
                )
        self.api_taskInfo_vehicleJob_post = channel.unary_unary(
                '/Gui_Server.Gui_Server/api_taskInfo_vehicleJob_post',
                request_serializer=gui__server__pb2.Request.SerializeToString,
                response_deserializer=gui__server__pb2.Response.FromString,
                )
        self.all_current_job = channel.unary_unary(
                '/Gui_Server.Gui_Server/all_current_job',
                request_serializer=gui__server__pb2.Request.SerializeToString,
                response_deserializer=gui__server__pb2.Response.FromString,
                )
        self.api_taskInfo_vehicleJob_all_current_job_post = channel.unary_unary(
                '/Gui_Server.Gui_Server/api_taskInfo_vehicleJob_all_current_job_post',
                request_serializer=gui__server__pb2.Request.SerializeToString,
                response_deserializer=gui__server__pb2.Response.FromString,
                )
        self.api_container_EditContainers_get = channel.unary_unary(
                '/Gui_Server.Gui_Server/api_container_EditContainers_get',
                request_serializer=gui__server__pb2.Request.SerializeToString,
                response_deserializer=gui__server__pb2.Response.FromString,
                )
        self.api_container_EditContainers_post = channel.unary_unary(
                '/Gui_Server.Gui_Server/api_container_EditContainers_post',
                request_serializer=gui__server__pb2.Request.SerializeToString,
                response_deserializer=gui__server__pb2.Response.FromString,
                )
        self.api_vehicleManager_stop_get = channel.unary_unary(
                '/Gui_Server.Gui_Server/api_vehicleManager_stop_get',
                request_serializer=gui__server__pb2.Request.SerializeToString,
                response_deserializer=gui__server__pb2.Response.FromString,
                )
        self.api_vehicleManager_stop_post = channel.unary_unary(
                '/Gui_Server.Gui_Server/api_vehicleManager_stop_post',
                request_serializer=gui__server__pb2.Request.SerializeToString,
                response_deserializer=gui__server__pb2.Response.FromString,
                )
        self.engine = channel.unary_unary(
                '/Gui_Server.Gui_Server/engine',
                request_serializer=gui__server__pb2.Request.SerializeToString,
                response_deserializer=gui__server__pb2.Response.FromString,
                )
        self.api_engine_post = channel.unary_unary(
                '/Gui_Server.Gui_Server/api_engine_post',
                request_serializer=gui__server__pb2.Request.SerializeToString,
                response_deserializer=gui__server__pb2.Response.FromString,
                )
        self.response_mixed_area = channel.unary_unary(
                '/Gui_Server.Gui_Server/response_mixed_area',
                request_serializer=gui__server__pb2.Request.SerializeToString,
                response_deserializer=gui__server__pb2.Response.FromString,
                )
        self.api_response_mixed_area_post = channel.unary_unary(
                '/Gui_Server.Gui_Server/api_response_mixed_area_post',
                request_serializer=gui__server__pb2.Request.SerializeToString,
                response_deserializer=gui__server__pb2.Response.FromString,
                )
        self.points = channel.unary_unary(
                '/Gui_Server.Gui_Server/points',
                request_serializer=gui__server__pb2.Request.SerializeToString,
                response_deserializer=gui__server__pb2.Response.FromString,
                )
        self.api_vehicleManager_points_post = channel.unary_unary(
                '/Gui_Server.Gui_Server/api_vehicleManager_points_post',
                request_serializer=gui__server__pb2.Request.SerializeToString,
                response_deserializer=gui__server__pb2.Response.FromString,
                )
        self.GetAll = channel.unary_unary(
                '/Gui_Server.Gui_Server/GetAll',
                request_serializer=gui__server__pb2.Request.SerializeToString,
                response_deserializer=gui__server__pb2.Response.FromString,
                )
        self.api_taskInfo_EquipmentStatus_GetAll_post = channel.unary_unary(
                '/Gui_Server.Gui_Server/api_taskInfo_EquipmentStatus_GetAll_post',
                request_serializer=gui__server__pb2.Request.SerializeToString,
                response_deserializer=gui__server__pb2.Response.FromString,
                )
        self.rc_task = channel.unary_unary(
                '/Gui_Server.Gui_Server/rc_task',
                request_serializer=gui__server__pb2.Request.SerializeToString,
                response_deserializer=gui__server__pb2.Response.FromString,
                )
        self.api_task_rc_task_post = channel.unary_unary(
                '/Gui_Server.Gui_Server/api_task_rc_task_post',
                request_serializer=gui__server__pb2.Request.SerializeToString,
                response_deserializer=gui__server__pb2.Response.FromString,
                )
        self.api_telep_get = channel.unary_unary(
                '/Gui_Server.Gui_Server/api_telep_get',
                request_serializer=gui__server__pb2.Request.SerializeToString,
                response_deserializer=gui__server__pb2.Response.FromString,
                )
        self.api_telep_post = channel.unary_unary(
                '/Gui_Server.Gui_Server/api_telep_post',
                request_serializer=gui__server__pb2.Request.SerializeToString,
                response_deserializer=gui__server__pb2.Response.FromString,
                )
        self.SetVesselInfo = channel.unary_unary(
                '/Gui_Server.Gui_Server/SetVesselInfo',
                request_serializer=gui__server__pb2.SetVesselSchemas.SerializeToString,
                response_deserializer=gui__server__pb2.Response.FromString,
                )
        self.ReleaseVesselInfo = channel.unary_unary(
                '/Gui_Server.Gui_Server/ReleaseVesselInfo',
                request_serializer=gui__server__pb2.DelVesselSchemas.SerializeToString,
                response_deserializer=gui__server__pb2.Response.FromString,
                )
        self.GetBertNO = channel.unary_unary(
                '/Gui_Server.Gui_Server/GetBertNO',
                request_serializer=gui__server__pb2.Request.SerializeToString,
                response_deserializer=gui__server__pb2.Response.FromString,
                )
        self.EditVesselInfo = channel.unary_unary(
                '/Gui_Server.Gui_Server/EditVesselInfo',
                request_serializer=gui__server__pb2.Request.SerializeToString,
                response_deserializer=gui__server__pb2.Response.FromString,
                )
        self.ghostVehicleCancel = channel.unary_unary(
                '/Gui_Server.Gui_Server/ghostVehicleCancel',
                request_serializer=gui__server__pb2.SetGhostVehicleCancelPost.SerializeToString,
                response_deserializer=gui__server__pb2.Response.FromString,
                )
        self.EquipmentStatus = channel.unary_unary(
                '/Gui_Server.Gui_Server/EquipmentStatus',
                request_serializer=gui__server__pb2.SetSwitchRequest.SerializeToString,
                response_deserializer=gui__server__pb2.Response.FromString,
                )
        self.SpreaderSize = channel.unary_unary(
                '/Gui_Server.Gui_Server/SpreaderSize',
                request_serializer=gui__server__pb2.SetSwitchRequest.SerializeToString,
                response_deserializer=gui__server__pb2.Response.FromString,
                )
        self.GetAllMessage = channel.unary_unary(
                '/Gui_Server.Gui_Server/GetAllMessage',
                request_serializer=gui__server__pb2.GetAllMessageSchemas.SerializeToString,
                response_deserializer=gui__server__pb2.Response.FromString,
                )
        self.GetFileMessage = channel.unary_unary(
                '/Gui_Server.Gui_Server/GetFileMessage',
                request_serializer=gui__server__pb2.GetAllMessageCSVSchemas.SerializeToString,
                response_deserializer=gui__server__pb2.Response.FromString,
                )
        self.UpdatePileInfo = channel.unary_unary(
                '/Gui_Server.Gui_Server/UpdatePileInfo',
                request_serializer=gui__server__pb2.UpdatePileInfoSchemas.SerializeToString,
                response_deserializer=gui__server__pb2.Response.FromString,
                )
        self.UpdateAllPileInfo = channel.unary_unary(
                '/Gui_Server.Gui_Server/UpdateAllPileInfo',
                request_serializer=gui__server__pb2.UpdateALlInfoSchemas.SerializeToString,
                response_deserializer=gui__server__pb2.Response.FromString,
                )
        self.ContainerInfoSetup = channel.unary_unary(
                '/Gui_Server.Gui_Server/ContainerInfoSetup',
                request_serializer=gui__server__pb2.ContainerSteupSchemas.SerializeToString,
                response_deserializer=gui__server__pb2.Response.FromString,
                )
        self.PlcStatus = channel.unary_unary(
                '/Gui_Server.Gui_Server/PlcStatus',
                request_serializer=gui__server__pb2.Request.SerializeToString,
                response_deserializer=gui__server__pb2.Response.FromString,
                )
        self.ServerVersion = channel.unary_unary(
                '/Gui_Server.Gui_Server/ServerVersion',
                request_serializer=gui__server__pb2.Request.SerializeToString,
                response_deserializer=gui__server__pb2.Response.FromString,
                )
        self.ForceOverTake = channel.unary_unary(
                '/Gui_Server.Gui_Server/ForceOverTake',
                request_serializer=gui__server__pb2.ForceOvertakeSchemas.SerializeToString,
                response_deserializer=gui__server__pb2.Response.FromString,
                )
        self.update_task = channel.unary_unary(
                '/Gui_Server.Gui_Server/update_task',
                request_serializer=gui__server__pb2.UpdateTaskSchema.SerializeToString,
                response_deserializer=gui__server__pb2.Response.FromString,
                )
        self.load_first = channel.unary_unary(
                '/Gui_Server.Gui_Server/load_first',
                request_serializer=gui__server__pb2.LoadFirstInSchema.SerializeToString,
                response_deserializer=gui__server__pb2.Response.FromString,
                )
        self.redo_task = channel.unary_unary(
                '/Gui_Server.Gui_Server/redo_task',
                request_serializer=gui__server__pb2.RedoTaskInSchema.SerializeToString,
                response_deserializer=gui__server__pb2.Response.FromString,
                )
        self.CollectionFailTask = channel.unary_unary(
                '/Gui_Server.Gui_Server/CollectionFailTask',
                request_serializer=gui__server__pb2.FailTaskSchemas.SerializeToString,
                response_deserializer=gui__server__pb2.Response.FromString,
                )
        self.event_report = channel.unary_unary(
                '/Gui_Server.Gui_Server/event_report',
                request_serializer=gui__server__pb2.EventReport.SerializeToString,
                response_deserializer=gui__server__pb2.Response.FromString,
                )
        self.TosLoginStatus = channel.unary_unary(
                '/Gui_Server.Gui_Server/TosLoginStatus',
                request_serializer=gui__server__pb2.Request.SerializeToString,
                response_deserializer=gui__server__pb2.Response.FromString,
                )
        self.twistlock_station = channel.unary_unary(
                '/Gui_Server.Gui_Server/twistlock_station',
                request_serializer=gui__server__pb2.CRUDTwistlockStation.SerializeToString,
                response_deserializer=gui__server__pb2.Response.FromString,
                )
        self.GetPtions = channel.unary_unary(
                '/Gui_Server.Gui_Server/GetPtions',
                request_serializer=gui__server__pb2.Request.SerializeToString,
                response_deserializer=gui__server__pb2.Response.FromString,
                )


class Gui_ServerServicer(object):
    """Missing associated documentation comment in .proto file."""

    def authentication(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def auth(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def update_passwd(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def user(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def user_put(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def user_get(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def user_delete(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def list(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def all(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def group(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def group_put(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def group_get(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def group_delete(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def group_all_get(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def permission(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def permission_put(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def permission_get(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def permission_delete(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def permission_all_get(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def permission_list_get(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def download(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def lockArea(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def api_taskInfo_lockArea_post(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def delete(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def api_taskInfo_lockArea_delete_post(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def deleteByTag(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def api_taskInfo_lockArea_deleteByTag_post(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def change(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def api_taskInfo_lockArea_change_post(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def resendJob(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def api_taskInfo_vehicleJob_resendJob_post(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def message_event_start_get(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def message_event_start_post(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def message_event_abort_get(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def message_event_abort_post(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def api_taskInfo_vehicleJob_delete_get(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def api_taskInfo_vehicleJob_delete_post(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def runImmediate(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def api_taskInfo_taskPool_runImmediate_post(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def api_taskInfo_taskPool_abort_get(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def api_taskInfo_taskPool_abort_post(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def trailerStatus(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def api_deviceInfo_vehicleStatus_trailerStatus_post(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def mode(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def api_deviceInfo_vehicleStatus_mode_post(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def containerInfo(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def api_taskInfo_containerInfo_post(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def message_event_rch_get(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def message_event_rch_post(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def query(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def fms_area_inventory_query_post(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def api_vehicleManager_power_get(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def api_vehicleManager_power_post(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def api_vehicleManager_handshake_get(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def api_vehicleManager_handshake_post(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetOperation(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def api_deviceInfo_vehicleStatus_SetOperation_post(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def api_vehicleManager_report_speed_ratio_get(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def api_vehicleManager_report_speed_ratio_post(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def api_container_InventoryUpdate_get(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def api_container_InventoryUpdate_post(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetVesselInfoStatus(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def api_taskInfo_VesselInfo_SetVesselInfoStatus_post(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def query_all(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def api_taskInfo_vehicleJob_query_all_post(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def PaceGlobal(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def api_taskInfo_PaceGlobal_post(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetLane(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def api_taskInfo_quayCrane_SetLane_post(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def message_event_update_qc_task_get(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def message_event_update_qc_task_post(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def vehicleJob(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def api_taskInfo_vehicleJob_post(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def all_current_job(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def api_taskInfo_vehicleJob_all_current_job_post(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def api_container_EditContainers_get(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def api_container_EditContainers_post(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def api_vehicleManager_stop_get(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def api_vehicleManager_stop_post(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def engine(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def api_engine_post(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def response_mixed_area(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def api_response_mixed_area_post(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def points(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def api_vehicleManager_points_post(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetAll(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def api_taskInfo_EquipmentStatus_GetAll_post(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def rc_task(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def api_task_rc_task_post(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def api_telep_get(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def api_telep_post(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetVesselInfo(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ReleaseVesselInfo(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetBertNO(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def EditVesselInfo(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ghostVehicleCancel(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def EquipmentStatus(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SpreaderSize(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetAllMessage(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetFileMessage(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdatePileInfo(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateAllPileInfo(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ContainerInfoSetup(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def PlcStatus(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ServerVersion(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ForceOverTake(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def update_task(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def load_first(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def redo_task(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CollectionFailTask(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def event_report(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def TosLoginStatus(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def twistlock_station(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetPtions(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_Gui_ServerServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'authentication': grpc.unary_unary_rpc_method_handler(
                    servicer.authentication,
                    request_deserializer=gui__server__pb2.LoginInSchema.FromString,
                    response_serializer=gui__server__pb2.Response.SerializeToString,
            ),
            'auth': grpc.unary_unary_rpc_method_handler(
                    servicer.auth,
                    request_deserializer=gui__server__pb2.Request.FromString,
                    response_serializer=gui__server__pb2.Response.SerializeToString,
            ),
            'update_passwd': grpc.unary_unary_rpc_method_handler(
                    servicer.update_passwd,
                    request_deserializer=gui__server__pb2.UpdatePasswdInSchema.FromString,
                    response_serializer=gui__server__pb2.Response.SerializeToString,
            ),
            'user': grpc.unary_unary_rpc_method_handler(
                    servicer.user,
                    request_deserializer=gui__server__pb2.CreateUserInSchema.FromString,
                    response_serializer=gui__server__pb2.Response.SerializeToString,
            ),
            'user_put': grpc.unary_unary_rpc_method_handler(
                    servicer.user_put,
                    request_deserializer=gui__server__pb2.UpdateUserInSchema.FromString,
                    response_serializer=gui__server__pb2.Response.SerializeToString,
            ),
            'user_get': grpc.unary_unary_rpc_method_handler(
                    servicer.user_get,
                    request_deserializer=gui__server__pb2.Request.FromString,
                    response_serializer=gui__server__pb2.Response.SerializeToString,
            ),
            'user_delete': grpc.unary_unary_rpc_method_handler(
                    servicer.user_delete,
                    request_deserializer=gui__server__pb2.Request.FromString,
                    response_serializer=gui__server__pb2.Response.SerializeToString,
            ),
            'list': grpc.unary_unary_rpc_method_handler(
                    servicer.list,
                    request_deserializer=gui__server__pb2.Request.FromString,
                    response_serializer=gui__server__pb2.Response.SerializeToString,
            ),
            'all': grpc.unary_unary_rpc_method_handler(
                    servicer.all,
                    request_deserializer=gui__server__pb2.Request.FromString,
                    response_serializer=gui__server__pb2.Response.SerializeToString,
            ),
            'group': grpc.unary_unary_rpc_method_handler(
                    servicer.group,
                    request_deserializer=gui__server__pb2.CreateGroupInSchema.FromString,
                    response_serializer=gui__server__pb2.Response.SerializeToString,
            ),
            'group_put': grpc.unary_unary_rpc_method_handler(
                    servicer.group_put,
                    request_deserializer=gui__server__pb2.UpdateGroupInSchema.FromString,
                    response_serializer=gui__server__pb2.Response.SerializeToString,
            ),
            'group_get': grpc.unary_unary_rpc_method_handler(
                    servicer.group_get,
                    request_deserializer=gui__server__pb2.Request.FromString,
                    response_serializer=gui__server__pb2.Response.SerializeToString,
            ),
            'group_delete': grpc.unary_unary_rpc_method_handler(
                    servicer.group_delete,
                    request_deserializer=gui__server__pb2.Request.FromString,
                    response_serializer=gui__server__pb2.Response.SerializeToString,
            ),
            'group_all_get': grpc.unary_unary_rpc_method_handler(
                    servicer.group_all_get,
                    request_deserializer=gui__server__pb2.Request.FromString,
                    response_serializer=gui__server__pb2.Response.SerializeToString,
            ),
            'permission': grpc.unary_unary_rpc_method_handler(
                    servicer.permission,
                    request_deserializer=gui__server__pb2.CreatePermissionInSchema.FromString,
                    response_serializer=gui__server__pb2.Response.SerializeToString,
            ),
            'permission_put': grpc.unary_unary_rpc_method_handler(
                    servicer.permission_put,
                    request_deserializer=gui__server__pb2.UpdatePermissionInSchema.FromString,
                    response_serializer=gui__server__pb2.Response.SerializeToString,
            ),
            'permission_get': grpc.unary_unary_rpc_method_handler(
                    servicer.permission_get,
                    request_deserializer=gui__server__pb2.Request.FromString,
                    response_serializer=gui__server__pb2.Response.SerializeToString,
            ),
            'permission_delete': grpc.unary_unary_rpc_method_handler(
                    servicer.permission_delete,
                    request_deserializer=gui__server__pb2.Request.FromString,
                    response_serializer=gui__server__pb2.Response.SerializeToString,
            ),
            'permission_all_get': grpc.unary_unary_rpc_method_handler(
                    servicer.permission_all_get,
                    request_deserializer=gui__server__pb2.Request.FromString,
                    response_serializer=gui__server__pb2.Response.SerializeToString,
            ),
            'permission_list_get': grpc.unary_unary_rpc_method_handler(
                    servicer.permission_list_get,
                    request_deserializer=gui__server__pb2.Request.FromString,
                    response_serializer=gui__server__pb2.Response.SerializeToString,
            ),
            'download': grpc.unary_unary_rpc_method_handler(
                    servicer.download,
                    request_deserializer=gui__server__pb2.Request.FromString,
                    response_serializer=gui__server__pb2.Response.SerializeToString,
            ),
            'lockArea': grpc.unary_unary_rpc_method_handler(
                    servicer.lockArea,
                    request_deserializer=gui__server__pb2.Request.FromString,
                    response_serializer=gui__server__pb2.Response.SerializeToString,
            ),
            'api_taskInfo_lockArea_post': grpc.unary_unary_rpc_method_handler(
                    servicer.api_taskInfo_lockArea_post,
                    request_deserializer=gui__server__pb2.Request.FromString,
                    response_serializer=gui__server__pb2.Response.SerializeToString,
            ),
            'delete': grpc.unary_unary_rpc_method_handler(
                    servicer.delete,
                    request_deserializer=gui__server__pb2.Request.FromString,
                    response_serializer=gui__server__pb2.Response.SerializeToString,
            ),
            'api_taskInfo_lockArea_delete_post': grpc.unary_unary_rpc_method_handler(
                    servicer.api_taskInfo_lockArea_delete_post,
                    request_deserializer=gui__server__pb2.Request.FromString,
                    response_serializer=gui__server__pb2.Response.SerializeToString,
            ),
            'deleteByTag': grpc.unary_unary_rpc_method_handler(
                    servicer.deleteByTag,
                    request_deserializer=gui__server__pb2.Request.FromString,
                    response_serializer=gui__server__pb2.Response.SerializeToString,
            ),
            'api_taskInfo_lockArea_deleteByTag_post': grpc.unary_unary_rpc_method_handler(
                    servicer.api_taskInfo_lockArea_deleteByTag_post,
                    request_deserializer=gui__server__pb2.Request.FromString,
                    response_serializer=gui__server__pb2.Response.SerializeToString,
            ),
            'change': grpc.unary_unary_rpc_method_handler(
                    servicer.change,
                    request_deserializer=gui__server__pb2.Request.FromString,
                    response_serializer=gui__server__pb2.Response.SerializeToString,
            ),
            'api_taskInfo_lockArea_change_post': grpc.unary_unary_rpc_method_handler(
                    servicer.api_taskInfo_lockArea_change_post,
                    request_deserializer=gui__server__pb2.Request.FromString,
                    response_serializer=gui__server__pb2.Response.SerializeToString,
            ),
            'resendJob': grpc.unary_unary_rpc_method_handler(
                    servicer.resendJob,
                    request_deserializer=gui__server__pb2.Request.FromString,
                    response_serializer=gui__server__pb2.Response.SerializeToString,
            ),
            'api_taskInfo_vehicleJob_resendJob_post': grpc.unary_unary_rpc_method_handler(
                    servicer.api_taskInfo_vehicleJob_resendJob_post,
                    request_deserializer=gui__server__pb2.Request.FromString,
                    response_serializer=gui__server__pb2.Response.SerializeToString,
            ),
            'message_event_start_get': grpc.unary_unary_rpc_method_handler(
                    servicer.message_event_start_get,
                    request_deserializer=gui__server__pb2.Request.FromString,
                    response_serializer=gui__server__pb2.Response.SerializeToString,
            ),
            'message_event_start_post': grpc.unary_unary_rpc_method_handler(
                    servicer.message_event_start_post,
                    request_deserializer=gui__server__pb2.Request.FromString,
                    response_serializer=gui__server__pb2.Response.SerializeToString,
            ),
            'message_event_abort_get': grpc.unary_unary_rpc_method_handler(
                    servicer.message_event_abort_get,
                    request_deserializer=gui__server__pb2.Request.FromString,
                    response_serializer=gui__server__pb2.Response.SerializeToString,
            ),
            'message_event_abort_post': grpc.unary_unary_rpc_method_handler(
                    servicer.message_event_abort_post,
                    request_deserializer=gui__server__pb2.Request.FromString,
                    response_serializer=gui__server__pb2.Response.SerializeToString,
            ),
            'api_taskInfo_vehicleJob_delete_get': grpc.unary_unary_rpc_method_handler(
                    servicer.api_taskInfo_vehicleJob_delete_get,
                    request_deserializer=gui__server__pb2.Request.FromString,
                    response_serializer=gui__server__pb2.Response.SerializeToString,
            ),
            'api_taskInfo_vehicleJob_delete_post': grpc.unary_unary_rpc_method_handler(
                    servicer.api_taskInfo_vehicleJob_delete_post,
                    request_deserializer=gui__server__pb2.Request.FromString,
                    response_serializer=gui__server__pb2.Response.SerializeToString,
            ),
            'runImmediate': grpc.unary_unary_rpc_method_handler(
                    servicer.runImmediate,
                    request_deserializer=gui__server__pb2.Request.FromString,
                    response_serializer=gui__server__pb2.Response.SerializeToString,
            ),
            'api_taskInfo_taskPool_runImmediate_post': grpc.unary_unary_rpc_method_handler(
                    servicer.api_taskInfo_taskPool_runImmediate_post,
                    request_deserializer=gui__server__pb2.Request.FromString,
                    response_serializer=gui__server__pb2.Response.SerializeToString,
            ),
            'api_taskInfo_taskPool_abort_get': grpc.unary_unary_rpc_method_handler(
                    servicer.api_taskInfo_taskPool_abort_get,
                    request_deserializer=gui__server__pb2.Request.FromString,
                    response_serializer=gui__server__pb2.Response.SerializeToString,
            ),
            'api_taskInfo_taskPool_abort_post': grpc.unary_unary_rpc_method_handler(
                    servicer.api_taskInfo_taskPool_abort_post,
                    request_deserializer=gui__server__pb2.Request.FromString,
                    response_serializer=gui__server__pb2.Response.SerializeToString,
            ),
            'trailerStatus': grpc.unary_unary_rpc_method_handler(
                    servicer.trailerStatus,
                    request_deserializer=gui__server__pb2.Request.FromString,
                    response_serializer=gui__server__pb2.Response.SerializeToString,
            ),
            'api_deviceInfo_vehicleStatus_trailerStatus_post': grpc.unary_unary_rpc_method_handler(
                    servicer.api_deviceInfo_vehicleStatus_trailerStatus_post,
                    request_deserializer=gui__server__pb2.Request.FromString,
                    response_serializer=gui__server__pb2.Response.SerializeToString,
            ),
            'mode': grpc.unary_unary_rpc_method_handler(
                    servicer.mode,
                    request_deserializer=gui__server__pb2.Request.FromString,
                    response_serializer=gui__server__pb2.Response.SerializeToString,
            ),
            'api_deviceInfo_vehicleStatus_mode_post': grpc.unary_unary_rpc_method_handler(
                    servicer.api_deviceInfo_vehicleStatus_mode_post,
                    request_deserializer=gui__server__pb2.Request.FromString,
                    response_serializer=gui__server__pb2.Response.SerializeToString,
            ),
            'containerInfo': grpc.unary_unary_rpc_method_handler(
                    servicer.containerInfo,
                    request_deserializer=gui__server__pb2.Request.FromString,
                    response_serializer=gui__server__pb2.Response.SerializeToString,
            ),
            'api_taskInfo_containerInfo_post': grpc.unary_unary_rpc_method_handler(
                    servicer.api_taskInfo_containerInfo_post,
                    request_deserializer=gui__server__pb2.Request.FromString,
                    response_serializer=gui__server__pb2.Response.SerializeToString,
            ),
            'message_event_rch_get': grpc.unary_unary_rpc_method_handler(
                    servicer.message_event_rch_get,
                    request_deserializer=gui__server__pb2.Request.FromString,
                    response_serializer=gui__server__pb2.Response.SerializeToString,
            ),
            'message_event_rch_post': grpc.unary_unary_rpc_method_handler(
                    servicer.message_event_rch_post,
                    request_deserializer=gui__server__pb2.Request.FromString,
                    response_serializer=gui__server__pb2.Response.SerializeToString,
            ),
            'query': grpc.unary_unary_rpc_method_handler(
                    servicer.query,
                    request_deserializer=gui__server__pb2.Request.FromString,
                    response_serializer=gui__server__pb2.Response.SerializeToString,
            ),
            'fms_area_inventory_query_post': grpc.unary_unary_rpc_method_handler(
                    servicer.fms_area_inventory_query_post,
                    request_deserializer=gui__server__pb2.Request.FromString,
                    response_serializer=gui__server__pb2.Response.SerializeToString,
            ),
            'api_vehicleManager_power_get': grpc.unary_unary_rpc_method_handler(
                    servicer.api_vehicleManager_power_get,
                    request_deserializer=gui__server__pb2.Request.FromString,
                    response_serializer=gui__server__pb2.Response.SerializeToString,
            ),
            'api_vehicleManager_power_post': grpc.unary_unary_rpc_method_handler(
                    servicer.api_vehicleManager_power_post,
                    request_deserializer=gui__server__pb2.Request.FromString,
                    response_serializer=gui__server__pb2.Response.SerializeToString,
            ),
            'api_vehicleManager_handshake_get': grpc.unary_unary_rpc_method_handler(
                    servicer.api_vehicleManager_handshake_get,
                    request_deserializer=gui__server__pb2.Request.FromString,
                    response_serializer=gui__server__pb2.Response.SerializeToString,
            ),
            'api_vehicleManager_handshake_post': grpc.unary_unary_rpc_method_handler(
                    servicer.api_vehicleManager_handshake_post,
                    request_deserializer=gui__server__pb2.Request.FromString,
                    response_serializer=gui__server__pb2.Response.SerializeToString,
            ),
            'SetOperation': grpc.unary_unary_rpc_method_handler(
                    servicer.SetOperation,
                    request_deserializer=gui__server__pb2.Request.FromString,
                    response_serializer=gui__server__pb2.Response.SerializeToString,
            ),
            'api_deviceInfo_vehicleStatus_SetOperation_post': grpc.unary_unary_rpc_method_handler(
                    servicer.api_deviceInfo_vehicleStatus_SetOperation_post,
                    request_deserializer=gui__server__pb2.Request.FromString,
                    response_serializer=gui__server__pb2.Response.SerializeToString,
            ),
            'api_vehicleManager_report_speed_ratio_get': grpc.unary_unary_rpc_method_handler(
                    servicer.api_vehicleManager_report_speed_ratio_get,
                    request_deserializer=gui__server__pb2.Request.FromString,
                    response_serializer=gui__server__pb2.Response.SerializeToString,
            ),
            'api_vehicleManager_report_speed_ratio_post': grpc.unary_unary_rpc_method_handler(
                    servicer.api_vehicleManager_report_speed_ratio_post,
                    request_deserializer=gui__server__pb2.Request.FromString,
                    response_serializer=gui__server__pb2.Response.SerializeToString,
            ),
            'api_container_InventoryUpdate_get': grpc.unary_unary_rpc_method_handler(
                    servicer.api_container_InventoryUpdate_get,
                    request_deserializer=gui__server__pb2.Request.FromString,
                    response_serializer=gui__server__pb2.Response.SerializeToString,
            ),
            'api_container_InventoryUpdate_post': grpc.unary_unary_rpc_method_handler(
                    servicer.api_container_InventoryUpdate_post,
                    request_deserializer=gui__server__pb2.Request.FromString,
                    response_serializer=gui__server__pb2.Response.SerializeToString,
            ),
            'SetVesselInfoStatus': grpc.unary_unary_rpc_method_handler(
                    servicer.SetVesselInfoStatus,
                    request_deserializer=gui__server__pb2.Request.FromString,
                    response_serializer=gui__server__pb2.Response.SerializeToString,
            ),
            'api_taskInfo_VesselInfo_SetVesselInfoStatus_post': grpc.unary_unary_rpc_method_handler(
                    servicer.api_taskInfo_VesselInfo_SetVesselInfoStatus_post,
                    request_deserializer=gui__server__pb2.Request.FromString,
                    response_serializer=gui__server__pb2.Response.SerializeToString,
            ),
            'query_all': grpc.unary_unary_rpc_method_handler(
                    servicer.query_all,
                    request_deserializer=gui__server__pb2.Request.FromString,
                    response_serializer=gui__server__pb2.Response.SerializeToString,
            ),
            'api_taskInfo_vehicleJob_query_all_post': grpc.unary_unary_rpc_method_handler(
                    servicer.api_taskInfo_vehicleJob_query_all_post,
                    request_deserializer=gui__server__pb2.Request.FromString,
                    response_serializer=gui__server__pb2.Response.SerializeToString,
            ),
            'PaceGlobal': grpc.unary_unary_rpc_method_handler(
                    servicer.PaceGlobal,
                    request_deserializer=gui__server__pb2.Request.FromString,
                    response_serializer=gui__server__pb2.Response.SerializeToString,
            ),
            'api_taskInfo_PaceGlobal_post': grpc.unary_unary_rpc_method_handler(
                    servicer.api_taskInfo_PaceGlobal_post,
                    request_deserializer=gui__server__pb2.Request.FromString,
                    response_serializer=gui__server__pb2.Response.SerializeToString,
            ),
            'SetLane': grpc.unary_unary_rpc_method_handler(
                    servicer.SetLane,
                    request_deserializer=gui__server__pb2.Request.FromString,
                    response_serializer=gui__server__pb2.Response.SerializeToString,
            ),
            'api_taskInfo_quayCrane_SetLane_post': grpc.unary_unary_rpc_method_handler(
                    servicer.api_taskInfo_quayCrane_SetLane_post,
                    request_deserializer=gui__server__pb2.Request.FromString,
                    response_serializer=gui__server__pb2.Response.SerializeToString,
            ),
            'message_event_update_qc_task_get': grpc.unary_unary_rpc_method_handler(
                    servicer.message_event_update_qc_task_get,
                    request_deserializer=gui__server__pb2.Request.FromString,
                    response_serializer=gui__server__pb2.Response.SerializeToString,
            ),
            'message_event_update_qc_task_post': grpc.unary_unary_rpc_method_handler(
                    servicer.message_event_update_qc_task_post,
                    request_deserializer=gui__server__pb2.Request.FromString,
                    response_serializer=gui__server__pb2.Response.SerializeToString,
            ),
            'vehicleJob': grpc.unary_unary_rpc_method_handler(
                    servicer.vehicleJob,
                    request_deserializer=gui__server__pb2.Request.FromString,
                    response_serializer=gui__server__pb2.Response.SerializeToString,
            ),
            'api_taskInfo_vehicleJob_post': grpc.unary_unary_rpc_method_handler(
                    servicer.api_taskInfo_vehicleJob_post,
                    request_deserializer=gui__server__pb2.Request.FromString,
                    response_serializer=gui__server__pb2.Response.SerializeToString,
            ),
            'all_current_job': grpc.unary_unary_rpc_method_handler(
                    servicer.all_current_job,
                    request_deserializer=gui__server__pb2.Request.FromString,
                    response_serializer=gui__server__pb2.Response.SerializeToString,
            ),
            'api_taskInfo_vehicleJob_all_current_job_post': grpc.unary_unary_rpc_method_handler(
                    servicer.api_taskInfo_vehicleJob_all_current_job_post,
                    request_deserializer=gui__server__pb2.Request.FromString,
                    response_serializer=gui__server__pb2.Response.SerializeToString,
            ),
            'api_container_EditContainers_get': grpc.unary_unary_rpc_method_handler(
                    servicer.api_container_EditContainers_get,
                    request_deserializer=gui__server__pb2.Request.FromString,
                    response_serializer=gui__server__pb2.Response.SerializeToString,
            ),
            'api_container_EditContainers_post': grpc.unary_unary_rpc_method_handler(
                    servicer.api_container_EditContainers_post,
                    request_deserializer=gui__server__pb2.Request.FromString,
                    response_serializer=gui__server__pb2.Response.SerializeToString,
            ),
            'api_vehicleManager_stop_get': grpc.unary_unary_rpc_method_handler(
                    servicer.api_vehicleManager_stop_get,
                    request_deserializer=gui__server__pb2.Request.FromString,
                    response_serializer=gui__server__pb2.Response.SerializeToString,
            ),
            'api_vehicleManager_stop_post': grpc.unary_unary_rpc_method_handler(
                    servicer.api_vehicleManager_stop_post,
                    request_deserializer=gui__server__pb2.Request.FromString,
                    response_serializer=gui__server__pb2.Response.SerializeToString,
            ),
            'engine': grpc.unary_unary_rpc_method_handler(
                    servicer.engine,
                    request_deserializer=gui__server__pb2.Request.FromString,
                    response_serializer=gui__server__pb2.Response.SerializeToString,
            ),
            'api_engine_post': grpc.unary_unary_rpc_method_handler(
                    servicer.api_engine_post,
                    request_deserializer=gui__server__pb2.Request.FromString,
                    response_serializer=gui__server__pb2.Response.SerializeToString,
            ),
            'response_mixed_area': grpc.unary_unary_rpc_method_handler(
                    servicer.response_mixed_area,
                    request_deserializer=gui__server__pb2.Request.FromString,
                    response_serializer=gui__server__pb2.Response.SerializeToString,
            ),
            'api_response_mixed_area_post': grpc.unary_unary_rpc_method_handler(
                    servicer.api_response_mixed_area_post,
                    request_deserializer=gui__server__pb2.Request.FromString,
                    response_serializer=gui__server__pb2.Response.SerializeToString,
            ),
            'points': grpc.unary_unary_rpc_method_handler(
                    servicer.points,
                    request_deserializer=gui__server__pb2.Request.FromString,
                    response_serializer=gui__server__pb2.Response.SerializeToString,
            ),
            'api_vehicleManager_points_post': grpc.unary_unary_rpc_method_handler(
                    servicer.api_vehicleManager_points_post,
                    request_deserializer=gui__server__pb2.Request.FromString,
                    response_serializer=gui__server__pb2.Response.SerializeToString,
            ),
            'GetAll': grpc.unary_unary_rpc_method_handler(
                    servicer.GetAll,
                    request_deserializer=gui__server__pb2.Request.FromString,
                    response_serializer=gui__server__pb2.Response.SerializeToString,
            ),
            'api_taskInfo_EquipmentStatus_GetAll_post': grpc.unary_unary_rpc_method_handler(
                    servicer.api_taskInfo_EquipmentStatus_GetAll_post,
                    request_deserializer=gui__server__pb2.Request.FromString,
                    response_serializer=gui__server__pb2.Response.SerializeToString,
            ),
            'rc_task': grpc.unary_unary_rpc_method_handler(
                    servicer.rc_task,
                    request_deserializer=gui__server__pb2.Request.FromString,
                    response_serializer=gui__server__pb2.Response.SerializeToString,
            ),
            'api_task_rc_task_post': grpc.unary_unary_rpc_method_handler(
                    servicer.api_task_rc_task_post,
                    request_deserializer=gui__server__pb2.Request.FromString,
                    response_serializer=gui__server__pb2.Response.SerializeToString,
            ),
            'api_telep_get': grpc.unary_unary_rpc_method_handler(
                    servicer.api_telep_get,
                    request_deserializer=gui__server__pb2.Request.FromString,
                    response_serializer=gui__server__pb2.Response.SerializeToString,
            ),
            'api_telep_post': grpc.unary_unary_rpc_method_handler(
                    servicer.api_telep_post,
                    request_deserializer=gui__server__pb2.Request.FromString,
                    response_serializer=gui__server__pb2.Response.SerializeToString,
            ),
            'SetVesselInfo': grpc.unary_unary_rpc_method_handler(
                    servicer.SetVesselInfo,
                    request_deserializer=gui__server__pb2.SetVesselSchemas.FromString,
                    response_serializer=gui__server__pb2.Response.SerializeToString,
            ),
            'ReleaseVesselInfo': grpc.unary_unary_rpc_method_handler(
                    servicer.ReleaseVesselInfo,
                    request_deserializer=gui__server__pb2.DelVesselSchemas.FromString,
                    response_serializer=gui__server__pb2.Response.SerializeToString,
            ),
            'GetBertNO': grpc.unary_unary_rpc_method_handler(
                    servicer.GetBertNO,
                    request_deserializer=gui__server__pb2.Request.FromString,
                    response_serializer=gui__server__pb2.Response.SerializeToString,
            ),
            'EditVesselInfo': grpc.unary_unary_rpc_method_handler(
                    servicer.EditVesselInfo,
                    request_deserializer=gui__server__pb2.Request.FromString,
                    response_serializer=gui__server__pb2.Response.SerializeToString,
            ),
            'ghostVehicleCancel': grpc.unary_unary_rpc_method_handler(
                    servicer.ghostVehicleCancel,
                    request_deserializer=gui__server__pb2.SetGhostVehicleCancelPost.FromString,
                    response_serializer=gui__server__pb2.Response.SerializeToString,
            ),
            'EquipmentStatus': grpc.unary_unary_rpc_method_handler(
                    servicer.EquipmentStatus,
                    request_deserializer=gui__server__pb2.SetSwitchRequest.FromString,
                    response_serializer=gui__server__pb2.Response.SerializeToString,
            ),
            'SpreaderSize': grpc.unary_unary_rpc_method_handler(
                    servicer.SpreaderSize,
                    request_deserializer=gui__server__pb2.SetSwitchRequest.FromString,
                    response_serializer=gui__server__pb2.Response.SerializeToString,
            ),
            'GetAllMessage': grpc.unary_unary_rpc_method_handler(
                    servicer.GetAllMessage,
                    request_deserializer=gui__server__pb2.GetAllMessageSchemas.FromString,
                    response_serializer=gui__server__pb2.Response.SerializeToString,
            ),
            'GetFileMessage': grpc.unary_unary_rpc_method_handler(
                    servicer.GetFileMessage,
                    request_deserializer=gui__server__pb2.GetAllMessageCSVSchemas.FromString,
                    response_serializer=gui__server__pb2.Response.SerializeToString,
            ),
            'UpdatePileInfo': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdatePileInfo,
                    request_deserializer=gui__server__pb2.UpdatePileInfoSchemas.FromString,
                    response_serializer=gui__server__pb2.Response.SerializeToString,
            ),
            'UpdateAllPileInfo': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateAllPileInfo,
                    request_deserializer=gui__server__pb2.UpdateALlInfoSchemas.FromString,
                    response_serializer=gui__server__pb2.Response.SerializeToString,
            ),
            'ContainerInfoSetup': grpc.unary_unary_rpc_method_handler(
                    servicer.ContainerInfoSetup,
                    request_deserializer=gui__server__pb2.ContainerSteupSchemas.FromString,
                    response_serializer=gui__server__pb2.Response.SerializeToString,
            ),
            'PlcStatus': grpc.unary_unary_rpc_method_handler(
                    servicer.PlcStatus,
                    request_deserializer=gui__server__pb2.Request.FromString,
                    response_serializer=gui__server__pb2.Response.SerializeToString,
            ),
            'ServerVersion': grpc.unary_unary_rpc_method_handler(
                    servicer.ServerVersion,
                    request_deserializer=gui__server__pb2.Request.FromString,
                    response_serializer=gui__server__pb2.Response.SerializeToString,
            ),
            'ForceOverTake': grpc.unary_unary_rpc_method_handler(
                    servicer.ForceOverTake,
                    request_deserializer=gui__server__pb2.ForceOvertakeSchemas.FromString,
                    response_serializer=gui__server__pb2.Response.SerializeToString,
            ),
            'update_task': grpc.unary_unary_rpc_method_handler(
                    servicer.update_task,
                    request_deserializer=gui__server__pb2.UpdateTaskSchema.FromString,
                    response_serializer=gui__server__pb2.Response.SerializeToString,
            ),
            'load_first': grpc.unary_unary_rpc_method_handler(
                    servicer.load_first,
                    request_deserializer=gui__server__pb2.LoadFirstInSchema.FromString,
                    response_serializer=gui__server__pb2.Response.SerializeToString,
            ),
            'redo_task': grpc.unary_unary_rpc_method_handler(
                    servicer.redo_task,
                    request_deserializer=gui__server__pb2.RedoTaskInSchema.FromString,
                    response_serializer=gui__server__pb2.Response.SerializeToString,
            ),
            'CollectionFailTask': grpc.unary_unary_rpc_method_handler(
                    servicer.CollectionFailTask,
                    request_deserializer=gui__server__pb2.FailTaskSchemas.FromString,
                    response_serializer=gui__server__pb2.Response.SerializeToString,
            ),
            'event_report': grpc.unary_unary_rpc_method_handler(
                    servicer.event_report,
                    request_deserializer=gui__server__pb2.EventReport.FromString,
                    response_serializer=gui__server__pb2.Response.SerializeToString,
            ),
            'TosLoginStatus': grpc.unary_unary_rpc_method_handler(
                    servicer.TosLoginStatus,
                    request_deserializer=gui__server__pb2.Request.FromString,
                    response_serializer=gui__server__pb2.Response.SerializeToString,
            ),
            'twistlock_station': grpc.unary_unary_rpc_method_handler(
                    servicer.twistlock_station,
                    request_deserializer=gui__server__pb2.CRUDTwistlockStation.FromString,
                    response_serializer=gui__server__pb2.Response.SerializeToString,
            ),
            'GetPtions': grpc.unary_unary_rpc_method_handler(
                    servicer.GetPtions,
                    request_deserializer=gui__server__pb2.Request.FromString,
                    response_serializer=gui__server__pb2.Response.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'Gui_Server.Gui_Server', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Gui_Server(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def authentication(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Gui_Server.Gui_Server/authentication',
            gui__server__pb2.LoginInSchema.SerializeToString,
            gui__server__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def auth(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Gui_Server.Gui_Server/auth',
            gui__server__pb2.Request.SerializeToString,
            gui__server__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def update_passwd(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Gui_Server.Gui_Server/update_passwd',
            gui__server__pb2.UpdatePasswdInSchema.SerializeToString,
            gui__server__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def user(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Gui_Server.Gui_Server/user',
            gui__server__pb2.CreateUserInSchema.SerializeToString,
            gui__server__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def user_put(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Gui_Server.Gui_Server/user_put',
            gui__server__pb2.UpdateUserInSchema.SerializeToString,
            gui__server__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def user_get(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Gui_Server.Gui_Server/user_get',
            gui__server__pb2.Request.SerializeToString,
            gui__server__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def user_delete(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Gui_Server.Gui_Server/user_delete',
            gui__server__pb2.Request.SerializeToString,
            gui__server__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def list(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Gui_Server.Gui_Server/list',
            gui__server__pb2.Request.SerializeToString,
            gui__server__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def all(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Gui_Server.Gui_Server/all',
            gui__server__pb2.Request.SerializeToString,
            gui__server__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def group(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Gui_Server.Gui_Server/group',
            gui__server__pb2.CreateGroupInSchema.SerializeToString,
            gui__server__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def group_put(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Gui_Server.Gui_Server/group_put',
            gui__server__pb2.UpdateGroupInSchema.SerializeToString,
            gui__server__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def group_get(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Gui_Server.Gui_Server/group_get',
            gui__server__pb2.Request.SerializeToString,
            gui__server__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def group_delete(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Gui_Server.Gui_Server/group_delete',
            gui__server__pb2.Request.SerializeToString,
            gui__server__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def group_all_get(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Gui_Server.Gui_Server/group_all_get',
            gui__server__pb2.Request.SerializeToString,
            gui__server__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def permission(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Gui_Server.Gui_Server/permission',
            gui__server__pb2.CreatePermissionInSchema.SerializeToString,
            gui__server__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def permission_put(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Gui_Server.Gui_Server/permission_put',
            gui__server__pb2.UpdatePermissionInSchema.SerializeToString,
            gui__server__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def permission_get(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Gui_Server.Gui_Server/permission_get',
            gui__server__pb2.Request.SerializeToString,
            gui__server__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def permission_delete(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Gui_Server.Gui_Server/permission_delete',
            gui__server__pb2.Request.SerializeToString,
            gui__server__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def permission_all_get(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Gui_Server.Gui_Server/permission_all_get',
            gui__server__pb2.Request.SerializeToString,
            gui__server__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def permission_list_get(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Gui_Server.Gui_Server/permission_list_get',
            gui__server__pb2.Request.SerializeToString,
            gui__server__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def download(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Gui_Server.Gui_Server/download',
            gui__server__pb2.Request.SerializeToString,
            gui__server__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def lockArea(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Gui_Server.Gui_Server/lockArea',
            gui__server__pb2.Request.SerializeToString,
            gui__server__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def api_taskInfo_lockArea_post(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Gui_Server.Gui_Server/api_taskInfo_lockArea_post',
            gui__server__pb2.Request.SerializeToString,
            gui__server__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def delete(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Gui_Server.Gui_Server/delete',
            gui__server__pb2.Request.SerializeToString,
            gui__server__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def api_taskInfo_lockArea_delete_post(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Gui_Server.Gui_Server/api_taskInfo_lockArea_delete_post',
            gui__server__pb2.Request.SerializeToString,
            gui__server__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def deleteByTag(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Gui_Server.Gui_Server/deleteByTag',
            gui__server__pb2.Request.SerializeToString,
            gui__server__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def api_taskInfo_lockArea_deleteByTag_post(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Gui_Server.Gui_Server/api_taskInfo_lockArea_deleteByTag_post',
            gui__server__pb2.Request.SerializeToString,
            gui__server__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def change(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Gui_Server.Gui_Server/change',
            gui__server__pb2.Request.SerializeToString,
            gui__server__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def api_taskInfo_lockArea_change_post(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Gui_Server.Gui_Server/api_taskInfo_lockArea_change_post',
            gui__server__pb2.Request.SerializeToString,
            gui__server__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def resendJob(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Gui_Server.Gui_Server/resendJob',
            gui__server__pb2.Request.SerializeToString,
            gui__server__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def api_taskInfo_vehicleJob_resendJob_post(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Gui_Server.Gui_Server/api_taskInfo_vehicleJob_resendJob_post',
            gui__server__pb2.Request.SerializeToString,
            gui__server__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def message_event_start_get(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Gui_Server.Gui_Server/message_event_start_get',
            gui__server__pb2.Request.SerializeToString,
            gui__server__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def message_event_start_post(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Gui_Server.Gui_Server/message_event_start_post',
            gui__server__pb2.Request.SerializeToString,
            gui__server__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def message_event_abort_get(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Gui_Server.Gui_Server/message_event_abort_get',
            gui__server__pb2.Request.SerializeToString,
            gui__server__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def message_event_abort_post(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Gui_Server.Gui_Server/message_event_abort_post',
            gui__server__pb2.Request.SerializeToString,
            gui__server__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def api_taskInfo_vehicleJob_delete_get(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Gui_Server.Gui_Server/api_taskInfo_vehicleJob_delete_get',
            gui__server__pb2.Request.SerializeToString,
            gui__server__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def api_taskInfo_vehicleJob_delete_post(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Gui_Server.Gui_Server/api_taskInfo_vehicleJob_delete_post',
            gui__server__pb2.Request.SerializeToString,
            gui__server__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def runImmediate(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Gui_Server.Gui_Server/runImmediate',
            gui__server__pb2.Request.SerializeToString,
            gui__server__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def api_taskInfo_taskPool_runImmediate_post(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Gui_Server.Gui_Server/api_taskInfo_taskPool_runImmediate_post',
            gui__server__pb2.Request.SerializeToString,
            gui__server__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def api_taskInfo_taskPool_abort_get(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Gui_Server.Gui_Server/api_taskInfo_taskPool_abort_get',
            gui__server__pb2.Request.SerializeToString,
            gui__server__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def api_taskInfo_taskPool_abort_post(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Gui_Server.Gui_Server/api_taskInfo_taskPool_abort_post',
            gui__server__pb2.Request.SerializeToString,
            gui__server__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def trailerStatus(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Gui_Server.Gui_Server/trailerStatus',
            gui__server__pb2.Request.SerializeToString,
            gui__server__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def api_deviceInfo_vehicleStatus_trailerStatus_post(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Gui_Server.Gui_Server/api_deviceInfo_vehicleStatus_trailerStatus_post',
            gui__server__pb2.Request.SerializeToString,
            gui__server__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def mode(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Gui_Server.Gui_Server/mode',
            gui__server__pb2.Request.SerializeToString,
            gui__server__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def api_deviceInfo_vehicleStatus_mode_post(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Gui_Server.Gui_Server/api_deviceInfo_vehicleStatus_mode_post',
            gui__server__pb2.Request.SerializeToString,
            gui__server__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def containerInfo(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Gui_Server.Gui_Server/containerInfo',
            gui__server__pb2.Request.SerializeToString,
            gui__server__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def api_taskInfo_containerInfo_post(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Gui_Server.Gui_Server/api_taskInfo_containerInfo_post',
            gui__server__pb2.Request.SerializeToString,
            gui__server__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def message_event_rch_get(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Gui_Server.Gui_Server/message_event_rch_get',
            gui__server__pb2.Request.SerializeToString,
            gui__server__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def message_event_rch_post(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Gui_Server.Gui_Server/message_event_rch_post',
            gui__server__pb2.Request.SerializeToString,
            gui__server__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def query(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Gui_Server.Gui_Server/query',
            gui__server__pb2.Request.SerializeToString,
            gui__server__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def fms_area_inventory_query_post(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Gui_Server.Gui_Server/fms_area_inventory_query_post',
            gui__server__pb2.Request.SerializeToString,
            gui__server__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def api_vehicleManager_power_get(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Gui_Server.Gui_Server/api_vehicleManager_power_get',
            gui__server__pb2.Request.SerializeToString,
            gui__server__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def api_vehicleManager_power_post(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Gui_Server.Gui_Server/api_vehicleManager_power_post',
            gui__server__pb2.Request.SerializeToString,
            gui__server__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def api_vehicleManager_handshake_get(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Gui_Server.Gui_Server/api_vehicleManager_handshake_get',
            gui__server__pb2.Request.SerializeToString,
            gui__server__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def api_vehicleManager_handshake_post(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Gui_Server.Gui_Server/api_vehicleManager_handshake_post',
            gui__server__pb2.Request.SerializeToString,
            gui__server__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetOperation(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Gui_Server.Gui_Server/SetOperation',
            gui__server__pb2.Request.SerializeToString,
            gui__server__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def api_deviceInfo_vehicleStatus_SetOperation_post(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Gui_Server.Gui_Server/api_deviceInfo_vehicleStatus_SetOperation_post',
            gui__server__pb2.Request.SerializeToString,
            gui__server__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def api_vehicleManager_report_speed_ratio_get(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Gui_Server.Gui_Server/api_vehicleManager_report_speed_ratio_get',
            gui__server__pb2.Request.SerializeToString,
            gui__server__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def api_vehicleManager_report_speed_ratio_post(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Gui_Server.Gui_Server/api_vehicleManager_report_speed_ratio_post',
            gui__server__pb2.Request.SerializeToString,
            gui__server__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def api_container_InventoryUpdate_get(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Gui_Server.Gui_Server/api_container_InventoryUpdate_get',
            gui__server__pb2.Request.SerializeToString,
            gui__server__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def api_container_InventoryUpdate_post(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Gui_Server.Gui_Server/api_container_InventoryUpdate_post',
            gui__server__pb2.Request.SerializeToString,
            gui__server__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetVesselInfoStatus(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Gui_Server.Gui_Server/SetVesselInfoStatus',
            gui__server__pb2.Request.SerializeToString,
            gui__server__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def api_taskInfo_VesselInfo_SetVesselInfoStatus_post(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Gui_Server.Gui_Server/api_taskInfo_VesselInfo_SetVesselInfoStatus_post',
            gui__server__pb2.Request.SerializeToString,
            gui__server__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def query_all(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Gui_Server.Gui_Server/query_all',
            gui__server__pb2.Request.SerializeToString,
            gui__server__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def api_taskInfo_vehicleJob_query_all_post(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Gui_Server.Gui_Server/api_taskInfo_vehicleJob_query_all_post',
            gui__server__pb2.Request.SerializeToString,
            gui__server__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def PaceGlobal(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Gui_Server.Gui_Server/PaceGlobal',
            gui__server__pb2.Request.SerializeToString,
            gui__server__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def api_taskInfo_PaceGlobal_post(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Gui_Server.Gui_Server/api_taskInfo_PaceGlobal_post',
            gui__server__pb2.Request.SerializeToString,
            gui__server__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetLane(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Gui_Server.Gui_Server/SetLane',
            gui__server__pb2.Request.SerializeToString,
            gui__server__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def api_taskInfo_quayCrane_SetLane_post(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Gui_Server.Gui_Server/api_taskInfo_quayCrane_SetLane_post',
            gui__server__pb2.Request.SerializeToString,
            gui__server__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def message_event_update_qc_task_get(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Gui_Server.Gui_Server/message_event_update_qc_task_get',
            gui__server__pb2.Request.SerializeToString,
            gui__server__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def message_event_update_qc_task_post(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Gui_Server.Gui_Server/message_event_update_qc_task_post',
            gui__server__pb2.Request.SerializeToString,
            gui__server__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def vehicleJob(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Gui_Server.Gui_Server/vehicleJob',
            gui__server__pb2.Request.SerializeToString,
            gui__server__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def api_taskInfo_vehicleJob_post(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Gui_Server.Gui_Server/api_taskInfo_vehicleJob_post',
            gui__server__pb2.Request.SerializeToString,
            gui__server__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def all_current_job(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Gui_Server.Gui_Server/all_current_job',
            gui__server__pb2.Request.SerializeToString,
            gui__server__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def api_taskInfo_vehicleJob_all_current_job_post(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Gui_Server.Gui_Server/api_taskInfo_vehicleJob_all_current_job_post',
            gui__server__pb2.Request.SerializeToString,
            gui__server__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def api_container_EditContainers_get(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Gui_Server.Gui_Server/api_container_EditContainers_get',
            gui__server__pb2.Request.SerializeToString,
            gui__server__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def api_container_EditContainers_post(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Gui_Server.Gui_Server/api_container_EditContainers_post',
            gui__server__pb2.Request.SerializeToString,
            gui__server__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def api_vehicleManager_stop_get(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Gui_Server.Gui_Server/api_vehicleManager_stop_get',
            gui__server__pb2.Request.SerializeToString,
            gui__server__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def api_vehicleManager_stop_post(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Gui_Server.Gui_Server/api_vehicleManager_stop_post',
            gui__server__pb2.Request.SerializeToString,
            gui__server__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def engine(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Gui_Server.Gui_Server/engine',
            gui__server__pb2.Request.SerializeToString,
            gui__server__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def api_engine_post(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Gui_Server.Gui_Server/api_engine_post',
            gui__server__pb2.Request.SerializeToString,
            gui__server__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def response_mixed_area(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Gui_Server.Gui_Server/response_mixed_area',
            gui__server__pb2.Request.SerializeToString,
            gui__server__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def api_response_mixed_area_post(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Gui_Server.Gui_Server/api_response_mixed_area_post',
            gui__server__pb2.Request.SerializeToString,
            gui__server__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def points(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Gui_Server.Gui_Server/points',
            gui__server__pb2.Request.SerializeToString,
            gui__server__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def api_vehicleManager_points_post(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Gui_Server.Gui_Server/api_vehicleManager_points_post',
            gui__server__pb2.Request.SerializeToString,
            gui__server__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetAll(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Gui_Server.Gui_Server/GetAll',
            gui__server__pb2.Request.SerializeToString,
            gui__server__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def api_taskInfo_EquipmentStatus_GetAll_post(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Gui_Server.Gui_Server/api_taskInfo_EquipmentStatus_GetAll_post',
            gui__server__pb2.Request.SerializeToString,
            gui__server__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def rc_task(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Gui_Server.Gui_Server/rc_task',
            gui__server__pb2.Request.SerializeToString,
            gui__server__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def api_task_rc_task_post(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Gui_Server.Gui_Server/api_task_rc_task_post',
            gui__server__pb2.Request.SerializeToString,
            gui__server__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def api_telep_get(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Gui_Server.Gui_Server/api_telep_get',
            gui__server__pb2.Request.SerializeToString,
            gui__server__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def api_telep_post(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Gui_Server.Gui_Server/api_telep_post',
            gui__server__pb2.Request.SerializeToString,
            gui__server__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetVesselInfo(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Gui_Server.Gui_Server/SetVesselInfo',
            gui__server__pb2.SetVesselSchemas.SerializeToString,
            gui__server__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ReleaseVesselInfo(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Gui_Server.Gui_Server/ReleaseVesselInfo',
            gui__server__pb2.DelVesselSchemas.SerializeToString,
            gui__server__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetBertNO(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Gui_Server.Gui_Server/GetBertNO',
            gui__server__pb2.Request.SerializeToString,
            gui__server__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def EditVesselInfo(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Gui_Server.Gui_Server/EditVesselInfo',
            gui__server__pb2.Request.SerializeToString,
            gui__server__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ghostVehicleCancel(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Gui_Server.Gui_Server/ghostVehicleCancel',
            gui__server__pb2.SetGhostVehicleCancelPost.SerializeToString,
            gui__server__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def EquipmentStatus(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Gui_Server.Gui_Server/EquipmentStatus',
            gui__server__pb2.SetSwitchRequest.SerializeToString,
            gui__server__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SpreaderSize(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Gui_Server.Gui_Server/SpreaderSize',
            gui__server__pb2.SetSwitchRequest.SerializeToString,
            gui__server__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetAllMessage(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Gui_Server.Gui_Server/GetAllMessage',
            gui__server__pb2.GetAllMessageSchemas.SerializeToString,
            gui__server__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetFileMessage(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Gui_Server.Gui_Server/GetFileMessage',
            gui__server__pb2.GetAllMessageCSVSchemas.SerializeToString,
            gui__server__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdatePileInfo(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Gui_Server.Gui_Server/UpdatePileInfo',
            gui__server__pb2.UpdatePileInfoSchemas.SerializeToString,
            gui__server__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateAllPileInfo(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Gui_Server.Gui_Server/UpdateAllPileInfo',
            gui__server__pb2.UpdateALlInfoSchemas.SerializeToString,
            gui__server__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ContainerInfoSetup(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Gui_Server.Gui_Server/ContainerInfoSetup',
            gui__server__pb2.ContainerSteupSchemas.SerializeToString,
            gui__server__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def PlcStatus(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Gui_Server.Gui_Server/PlcStatus',
            gui__server__pb2.Request.SerializeToString,
            gui__server__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ServerVersion(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Gui_Server.Gui_Server/ServerVersion',
            gui__server__pb2.Request.SerializeToString,
            gui__server__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ForceOverTake(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Gui_Server.Gui_Server/ForceOverTake',
            gui__server__pb2.ForceOvertakeSchemas.SerializeToString,
            gui__server__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def update_task(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Gui_Server.Gui_Server/update_task',
            gui__server__pb2.UpdateTaskSchema.SerializeToString,
            gui__server__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def load_first(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Gui_Server.Gui_Server/load_first',
            gui__server__pb2.LoadFirstInSchema.SerializeToString,
            gui__server__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def redo_task(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Gui_Server.Gui_Server/redo_task',
            gui__server__pb2.RedoTaskInSchema.SerializeToString,
            gui__server__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CollectionFailTask(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Gui_Server.Gui_Server/CollectionFailTask',
            gui__server__pb2.FailTaskSchemas.SerializeToString,
            gui__server__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def event_report(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Gui_Server.Gui_Server/event_report',
            gui__server__pb2.EventReport.SerializeToString,
            gui__server__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def TosLoginStatus(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Gui_Server.Gui_Server/TosLoginStatus',
            gui__server__pb2.Request.SerializeToString,
            gui__server__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def twistlock_station(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Gui_Server.Gui_Server/twistlock_station',
            gui__server__pb2.CRUDTwistlockStation.SerializeToString,
            gui__server__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetPtions(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Gui_Server.Gui_Server/GetPtions',
            gui__server__pb2.Request.SerializeToString,
            gui__server__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

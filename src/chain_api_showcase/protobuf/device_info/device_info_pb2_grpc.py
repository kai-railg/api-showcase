# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from . import device_info_pb2 as device__info__pb2


class Device_InfoStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.api_deviceInfo_maintain_status_post = channel.unary_unary(
                '/Device_Info.Device_Info/api_deviceInfo_maintain_status_post',
                request_serializer=device__info__pb2.Request.SerializeToString,
                response_deserializer=device__info__pb2.Response.FromString,
                )
        self.api_deviceInfo_maintain_start_tracemalloc_get = channel.unary_unary(
                '/Device_Info.Device_Info/api_deviceInfo_maintain_start_tracemalloc_get',
                request_serializer=device__info__pb2.Request.SerializeToString,
                response_deserializer=device__info__pb2.Response.FromString,
                )
        self.api_deviceInfo_maintain_stop_tracemalloc_get = channel.unary_unary(
                '/Device_Info.Device_Info/api_deviceInfo_maintain_stop_tracemalloc_get',
                request_serializer=device__info__pb2.Request.SerializeToString,
                response_deserializer=device__info__pb2.Response.FromString,
                )
        self.api_deviceInfo_maintain_get_tracemalloc_get = channel.unary_unary(
                '/Device_Info.Device_Info/api_deviceInfo_maintain_get_tracemalloc_get',
                request_serializer=device__info__pb2.Request.SerializeToString,
                response_deserializer=device__info__pb2.Response.FromString,
                )
        self.deleteVehicle = channel.unary_unary(
                '/Device_Info.Device_Info/deleteVehicle',
                request_serializer=device__info__pb2.Request.SerializeToString,
                response_deserializer=device__info__pb2.Response.FromString,
                )
        self.deleteTg = channel.unary_unary(
                '/Device_Info.Device_Info/deleteTg',
                request_serializer=device__info__pb2.Request.SerializeToString,
                response_deserializer=device__info__pb2.Response.FromString,
                )
        self.vehicleDetails = channel.unary_unary(
                '/Device_Info.Device_Info/vehicleDetails',
                request_serializer=device__info__pb2.Request.SerializeToString,
                response_deserializer=device__info__pb2.Response.FromString,
                )
        self.api_deviceInfo_vehicleStatus_vehicleDetails_post = channel.unary_unary(
                '/Device_Info.Device_Info/api_deviceInfo_vehicleStatus_vehicleDetails_post',
                request_serializer=device__info__pb2.Request.SerializeToString,
                response_deserializer=device__info__pb2.Response.FromString,
                )
        self.LoginStatus = channel.unary_unary(
                '/Device_Info.Device_Info/LoginStatus',
                request_serializer=device__info__pb2.Request.SerializeToString,
                response_deserializer=device__info__pb2.Response.FromString,
                )
        self.api_deviceInfo_vehicleStatus_LoginStatus_post = channel.unary_unary(
                '/Device_Info.Device_Info/api_deviceInfo_vehicleStatus_LoginStatus_post',
                request_serializer=device__info__pb2.SetLoginStatusPost.SerializeToString,
                response_deserializer=device__info__pb2.Response.FromString,
                )
        self.api_deviceInfo_vehicleStatus_mode_get = channel.unary_unary(
                '/Device_Info.Device_Info/api_deviceInfo_vehicleStatus_mode_get',
                request_serializer=device__info__pb2.Request.SerializeToString,
                response_deserializer=device__info__pb2.Response.FromString,
                )
        self.api_deviceInfo_vehicleStatus_mode_post = channel.unary_unary(
                '/Device_Info.Device_Info/api_deviceInfo_vehicleStatus_mode_post',
                request_serializer=device__info__pb2.SetModePost.SerializeToString,
                response_deserializer=device__info__pb2.Response.FromString,
                )
        self.bsm = channel.unary_unary(
                '/Device_Info.Device_Info/bsm',
                request_serializer=device__info__pb2.Request.SerializeToString,
                response_deserializer=device__info__pb2.Response.FromString,
                )
        self.soc = channel.unary_unary(
                '/Device_Info.Device_Info/soc',
                request_serializer=device__info__pb2.Request.SerializeToString,
                response_deserializer=device__info__pb2.Response.FromString,
                )
        self.api_deviceInfo_vehicleStatus_soc_post = channel.unary_unary(
                '/Device_Info.Device_Info/api_deviceInfo_vehicleStatus_soc_post',
                request_serializer=device__info__pb2.SetSocPost.SerializeToString,
                response_deserializer=device__info__pb2.Response.FromString,
                )
        self.longPath = channel.unary_unary(
                '/Device_Info.Device_Info/longPath',
                request_serializer=device__info__pb2.Request.SerializeToString,
                response_deserializer=device__info__pb2.Response.FromString,
                )
        self.api_deviceInfo_vehicleStatus_longPath_post = channel.unary_unary(
                '/Device_Info.Device_Info/api_deviceInfo_vehicleStatus_longPath_post',
                request_serializer=device__info__pb2.SetLongPath.SerializeToString,
                response_deserializer=device__info__pb2.Response.FromString,
                )
        self.shortPath = channel.unary_unary(
                '/Device_Info.Device_Info/shortPath',
                request_serializer=device__info__pb2.Request.SerializeToString,
                response_deserializer=device__info__pb2.Response.FromString,
                )
        self.api_deviceInfo_vehicleStatus_shortPath_post = channel.unary_unary(
                '/Device_Info.Device_Info/api_deviceInfo_vehicleStatus_shortPath_post',
                request_serializer=device__info__pb2.SetShortPath.SerializeToString,
                response_deserializer=device__info__pb2.Response.FromString,
                )
        self.suspend = channel.unary_unary(
                '/Device_Info.Device_Info/suspend',
                request_serializer=device__info__pb2.Request.SerializeToString,
                response_deserializer=device__info__pb2.Response.FromString,
                )
        self.api_deviceInfo_vehicleStatus_suspend_post = channel.unary_unary(
                '/Device_Info.Device_Info/api_deviceInfo_vehicleStatus_suspend_post',
                request_serializer=device__info__pb2.Request.SerializeToString,
                response_deserializer=device__info__pb2.Response.FromString,
                )
        self.api_deviceInfo_vehicleStatus_trailerStatus_get = channel.unary_unary(
                '/Device_Info.Device_Info/api_deviceInfo_vehicleStatus_trailerStatus_get',
                request_serializer=device__info__pb2.Request.SerializeToString,
                response_deserializer=device__info__pb2.Response.FromString,
                )
        self.api_deviceInfo_vehicleStatus_trailerStatus_post = channel.unary_unary(
                '/Device_Info.Device_Info/api_deviceInfo_vehicleStatus_trailerStatus_post',
                request_serializer=device__info__pb2.SetTrailerStatusPost.SerializeToString,
                response_deserializer=device__info__pb2.Response.FromString,
                )
        self.ghostVehicle = channel.unary_unary(
                '/Device_Info.Device_Info/ghostVehicle',
                request_serializer=device__info__pb2.Request.SerializeToString,
                response_deserializer=device__info__pb2.Response.FromString,
                )
        self.api_deviceInfo_vehicleStatus_ghostVehicle_post = channel.unary_unary(
                '/Device_Info.Device_Info/api_deviceInfo_vehicleStatus_ghostVehicle_post',
                request_serializer=device__info__pb2.SetGhostVehiclePost.SerializeToString,
                response_deserializer=device__info__pb2.Response.FromString,
                )
        self.api_deviceInfo_vehicleStatus_ghostVehicleCancel_post = channel.unary_unary(
                '/Device_Info.Device_Info/api_deviceInfo_vehicleStatus_ghostVehicleCancel_post',
                request_serializer=device__info__pb2.SetGhostVehicleCancelPost.SerializeToString,
                response_deserializer=device__info__pb2.Response.FromString,
                )
        self.getVehicleChassis = channel.unary_unary(
                '/Device_Info.Device_Info/getVehicleChassis',
                request_serializer=device__info__pb2.Request.SerializeToString,
                response_deserializer=device__info__pb2.Response.FromString,
                )
        self.getVehicleAscChassis = channel.unary_unary(
                '/Device_Info.Device_Info/getVehicleAscChassis',
                request_serializer=device__info__pb2.Request.SerializeToString,
                response_deserializer=device__info__pb2.Response.FromString,
                )
        self.getVehiclesys = channel.unary_unary(
                '/Device_Info.Device_Info/getVehiclesys',
                request_serializer=device__info__pb2.Request.SerializeToString,
                response_deserializer=device__info__pb2.Response.FromString,
                )
        self.api_deviceInfo_vehicleStatus_SetOperation_post = channel.unary_unary(
                '/Device_Info.Device_Info/api_deviceInfo_vehicleStatus_SetOperation_post',
                request_serializer=device__info__pb2.Request.SerializeToString,
                response_deserializer=device__info__pb2.Response.FromString,
                )
        self.Operation = channel.unary_unary(
                '/Device_Info.Device_Info/Operation',
                request_serializer=device__info__pb2.Request.SerializeToString,
                response_deserializer=device__info__pb2.Response.FromString,
                )
        self.SuspendReasonReport = channel.unary_unary(
                '/Device_Info.Device_Info/SuspendReasonReport',
                request_serializer=device__info__pb2.ReportSuspend.SerializeToString,
                response_deserializer=device__info__pb2.Response.FromString,
                )
        self.SuspendReason = channel.unary_unary(
                '/Device_Info.Device_Info/SuspendReason',
                request_serializer=device__info__pb2.Request.SerializeToString,
                response_deserializer=device__info__pb2.Response.FromString,
                )
        self.StopTime = channel.unary_unary(
                '/Device_Info.Device_Info/StopTime',
                request_serializer=device__info__pb2.ReportStopTime.SerializeToString,
                response_deserializer=device__info__pb2.Response.FromString,
                )
        self.CurrentStatus = channel.unary_unary(
                '/Device_Info.Device_Info/CurrentStatus',
                request_serializer=device__info__pb2.Request.SerializeToString,
                response_deserializer=device__info__pb2.Response.FromString,
                )
        self.BtnStatus = channel.unary_unary(
                '/Device_Info.Device_Info/BtnStatus',
                request_serializer=device__info__pb2.Request.SerializeToString,
                response_deserializer=device__info__pb2.Response.FromString,
                )
        self.api_deviceInfo_vehicleStatus_BtnStatus_post = channel.unary_unary(
                '/Device_Info.Device_Info/api_deviceInfo_vehicleStatus_BtnStatus_post',
                request_serializer=device__info__pb2.BtnStatusSchemas.SerializeToString,
                response_deserializer=device__info__pb2.Response.FromString,
                )
        self.craneStatus = channel.unary_unary(
                '/Device_Info.Device_Info/craneStatus',
                request_serializer=device__info__pb2.Request.SerializeToString,
                response_deserializer=device__info__pb2.Response.FromString,
                )
        self.lane = channel.unary_unary(
                '/Device_Info.Device_Info/lane',
                request_serializer=device__info__pb2.Request.SerializeToString,
                response_deserializer=device__info__pb2.Response.FromString,
                )
        self.craneList = channel.unary_unary(
                '/Device_Info.Device_Info/craneList',
                request_serializer=device__info__pb2.Request.SerializeToString,
                response_deserializer=device__info__pb2.Response.FromString,
                )
        self.plcStatus = channel.unary_unary(
                '/Device_Info.Device_Info/plcStatus',
                request_serializer=device__info__pb2.Request.SerializeToString,
                response_deserializer=device__info__pb2.Response.FromString,
                )
        self.SetPileInfoReport = channel.unary_unary(
                '/Device_Info.Device_Info/SetPileInfoReport',
                request_serializer=device__info__pb2.SetPileInfoSchemas.SerializeToString,
                response_deserializer=device__info__pb2.Response.FromString,
                )
        self.getPileInfoReport = channel.unary_unary(
                '/Device_Info.Device_Info/getPileInfoReport',
                request_serializer=device__info__pb2.GetPileInfoSchemas.SerializeToString,
                response_deserializer=device__info__pb2.Response.FromString,
                )
        self.SetPileInfoAllCodeReport = channel.unary_unary(
                '/Device_Info.Device_Info/SetPileInfoAllCodeReport',
                request_serializer=device__info__pb2.SetPileInfoAllSchemas.SerializeToString,
                response_deserializer=device__info__pb2.Response.FromString,
                )
        self.GetPileInfoAllCodeReport = channel.unary_unary(
                '/Device_Info.Device_Info/GetPileInfoAllCodeReport',
                request_serializer=device__info__pb2.Request.SerializeToString,
                response_deserializer=device__info__pb2.Response.FromString,
                )
        self.PileMessage = channel.unary_unary(
                '/Device_Info.Device_Info/PileMessage',
                request_serializer=device__info__pb2.PileMessageSchemas.SerializeToString,
                response_deserializer=device__info__pb2.Response.FromString,
                )
        self.PileMessageGet = channel.unary_unary(
                '/Device_Info.Device_Info/PileMessageGet',
                request_serializer=device__info__pb2.Request.SerializeToString,
                response_deserializer=device__info__pb2.Response.FromString,
                )
        self.arriveTg = channel.unary_unary(
                '/Device_Info.Device_Info/arriveTg',
                request_serializer=device__info__pb2.Request.SerializeToString,
                response_deserializer=device__info__pb2.Response.FromString,
                )
        self.leaveTg = channel.unary_unary(
                '/Device_Info.Device_Info/leaveTg',
                request_serializer=device__info__pb2.Request.SerializeToString,
                response_deserializer=device__info__pb2.Response.FromString,
                )
        self.SetmultiCarEmergencyStop = channel.unary_unary(
                '/Device_Info.Device_Info/SetmultiCarEmergencyStop',
                request_serializer=device__info__pb2.Request.SerializeToString,
                response_deserializer=device__info__pb2.Response.FromString,
                )
        self.GetmultiCarEmergencyStop = channel.unary_unary(
                '/Device_Info.Device_Info/GetmultiCarEmergencyStop',
                request_serializer=device__info__pb2.Request.SerializeToString,
                response_deserializer=device__info__pb2.Response.FromString,
                )


class Device_InfoServicer(object):
    """Missing associated documentation comment in .proto file."""

    def api_deviceInfo_maintain_status_post(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def api_deviceInfo_maintain_start_tracemalloc_get(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def api_deviceInfo_maintain_stop_tracemalloc_get(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def api_deviceInfo_maintain_get_tracemalloc_get(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def deleteVehicle(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def deleteTg(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def vehicleDetails(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def api_deviceInfo_vehicleStatus_vehicleDetails_post(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def LoginStatus(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def api_deviceInfo_vehicleStatus_LoginStatus_post(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def api_deviceInfo_vehicleStatus_mode_get(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def api_deviceInfo_vehicleStatus_mode_post(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def bsm(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def soc(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def api_deviceInfo_vehicleStatus_soc_post(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def longPath(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def api_deviceInfo_vehicleStatus_longPath_post(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def shortPath(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def api_deviceInfo_vehicleStatus_shortPath_post(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def suspend(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def api_deviceInfo_vehicleStatus_suspend_post(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def api_deviceInfo_vehicleStatus_trailerStatus_get(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def api_deviceInfo_vehicleStatus_trailerStatus_post(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ghostVehicle(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def api_deviceInfo_vehicleStatus_ghostVehicle_post(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def api_deviceInfo_vehicleStatus_ghostVehicleCancel_post(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def getVehicleChassis(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def getVehicleAscChassis(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def getVehiclesys(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def api_deviceInfo_vehicleStatus_SetOperation_post(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Operation(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SuspendReasonReport(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SuspendReason(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def StopTime(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CurrentStatus(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def BtnStatus(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def api_deviceInfo_vehicleStatus_BtnStatus_post(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def craneStatus(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def lane(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def craneList(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def plcStatus(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetPileInfoReport(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def getPileInfoReport(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetPileInfoAllCodeReport(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetPileInfoAllCodeReport(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def PileMessage(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def PileMessageGet(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def arriveTg(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def leaveTg(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetmultiCarEmergencyStop(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetmultiCarEmergencyStop(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_Device_InfoServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'api_deviceInfo_maintain_status_post': grpc.unary_unary_rpc_method_handler(
                    servicer.api_deviceInfo_maintain_status_post,
                    request_deserializer=device__info__pb2.Request.FromString,
                    response_serializer=device__info__pb2.Response.SerializeToString,
            ),
            'api_deviceInfo_maintain_start_tracemalloc_get': grpc.unary_unary_rpc_method_handler(
                    servicer.api_deviceInfo_maintain_start_tracemalloc_get,
                    request_deserializer=device__info__pb2.Request.FromString,
                    response_serializer=device__info__pb2.Response.SerializeToString,
            ),
            'api_deviceInfo_maintain_stop_tracemalloc_get': grpc.unary_unary_rpc_method_handler(
                    servicer.api_deviceInfo_maintain_stop_tracemalloc_get,
                    request_deserializer=device__info__pb2.Request.FromString,
                    response_serializer=device__info__pb2.Response.SerializeToString,
            ),
            'api_deviceInfo_maintain_get_tracemalloc_get': grpc.unary_unary_rpc_method_handler(
                    servicer.api_deviceInfo_maintain_get_tracemalloc_get,
                    request_deserializer=device__info__pb2.Request.FromString,
                    response_serializer=device__info__pb2.Response.SerializeToString,
            ),
            'deleteVehicle': grpc.unary_unary_rpc_method_handler(
                    servicer.deleteVehicle,
                    request_deserializer=device__info__pb2.Request.FromString,
                    response_serializer=device__info__pb2.Response.SerializeToString,
            ),
            'deleteTg': grpc.unary_unary_rpc_method_handler(
                    servicer.deleteTg,
                    request_deserializer=device__info__pb2.Request.FromString,
                    response_serializer=device__info__pb2.Response.SerializeToString,
            ),
            'vehicleDetails': grpc.unary_unary_rpc_method_handler(
                    servicer.vehicleDetails,
                    request_deserializer=device__info__pb2.Request.FromString,
                    response_serializer=device__info__pb2.Response.SerializeToString,
            ),
            'api_deviceInfo_vehicleStatus_vehicleDetails_post': grpc.unary_unary_rpc_method_handler(
                    servicer.api_deviceInfo_vehicleStatus_vehicleDetails_post,
                    request_deserializer=device__info__pb2.Request.FromString,
                    response_serializer=device__info__pb2.Response.SerializeToString,
            ),
            'LoginStatus': grpc.unary_unary_rpc_method_handler(
                    servicer.LoginStatus,
                    request_deserializer=device__info__pb2.Request.FromString,
                    response_serializer=device__info__pb2.Response.SerializeToString,
            ),
            'api_deviceInfo_vehicleStatus_LoginStatus_post': grpc.unary_unary_rpc_method_handler(
                    servicer.api_deviceInfo_vehicleStatus_LoginStatus_post,
                    request_deserializer=device__info__pb2.SetLoginStatusPost.FromString,
                    response_serializer=device__info__pb2.Response.SerializeToString,
            ),
            'api_deviceInfo_vehicleStatus_mode_get': grpc.unary_unary_rpc_method_handler(
                    servicer.api_deviceInfo_vehicleStatus_mode_get,
                    request_deserializer=device__info__pb2.Request.FromString,
                    response_serializer=device__info__pb2.Response.SerializeToString,
            ),
            'api_deviceInfo_vehicleStatus_mode_post': grpc.unary_unary_rpc_method_handler(
                    servicer.api_deviceInfo_vehicleStatus_mode_post,
                    request_deserializer=device__info__pb2.SetModePost.FromString,
                    response_serializer=device__info__pb2.Response.SerializeToString,
            ),
            'bsm': grpc.unary_unary_rpc_method_handler(
                    servicer.bsm,
                    request_deserializer=device__info__pb2.Request.FromString,
                    response_serializer=device__info__pb2.Response.SerializeToString,
            ),
            'soc': grpc.unary_unary_rpc_method_handler(
                    servicer.soc,
                    request_deserializer=device__info__pb2.Request.FromString,
                    response_serializer=device__info__pb2.Response.SerializeToString,
            ),
            'api_deviceInfo_vehicleStatus_soc_post': grpc.unary_unary_rpc_method_handler(
                    servicer.api_deviceInfo_vehicleStatus_soc_post,
                    request_deserializer=device__info__pb2.SetSocPost.FromString,
                    response_serializer=device__info__pb2.Response.SerializeToString,
            ),
            'longPath': grpc.unary_unary_rpc_method_handler(
                    servicer.longPath,
                    request_deserializer=device__info__pb2.Request.FromString,
                    response_serializer=device__info__pb2.Response.SerializeToString,
            ),
            'api_deviceInfo_vehicleStatus_longPath_post': grpc.unary_unary_rpc_method_handler(
                    servicer.api_deviceInfo_vehicleStatus_longPath_post,
                    request_deserializer=device__info__pb2.SetLongPath.FromString,
                    response_serializer=device__info__pb2.Response.SerializeToString,
            ),
            'shortPath': grpc.unary_unary_rpc_method_handler(
                    servicer.shortPath,
                    request_deserializer=device__info__pb2.Request.FromString,
                    response_serializer=device__info__pb2.Response.SerializeToString,
            ),
            'api_deviceInfo_vehicleStatus_shortPath_post': grpc.unary_unary_rpc_method_handler(
                    servicer.api_deviceInfo_vehicleStatus_shortPath_post,
                    request_deserializer=device__info__pb2.SetShortPath.FromString,
                    response_serializer=device__info__pb2.Response.SerializeToString,
            ),
            'suspend': grpc.unary_unary_rpc_method_handler(
                    servicer.suspend,
                    request_deserializer=device__info__pb2.Request.FromString,
                    response_serializer=device__info__pb2.Response.SerializeToString,
            ),
            'api_deviceInfo_vehicleStatus_suspend_post': grpc.unary_unary_rpc_method_handler(
                    servicer.api_deviceInfo_vehicleStatus_suspend_post,
                    request_deserializer=device__info__pb2.Request.FromString,
                    response_serializer=device__info__pb2.Response.SerializeToString,
            ),
            'api_deviceInfo_vehicleStatus_trailerStatus_get': grpc.unary_unary_rpc_method_handler(
                    servicer.api_deviceInfo_vehicleStatus_trailerStatus_get,
                    request_deserializer=device__info__pb2.Request.FromString,
                    response_serializer=device__info__pb2.Response.SerializeToString,
            ),
            'api_deviceInfo_vehicleStatus_trailerStatus_post': grpc.unary_unary_rpc_method_handler(
                    servicer.api_deviceInfo_vehicleStatus_trailerStatus_post,
                    request_deserializer=device__info__pb2.SetTrailerStatusPost.FromString,
                    response_serializer=device__info__pb2.Response.SerializeToString,
            ),
            'ghostVehicle': grpc.unary_unary_rpc_method_handler(
                    servicer.ghostVehicle,
                    request_deserializer=device__info__pb2.Request.FromString,
                    response_serializer=device__info__pb2.Response.SerializeToString,
            ),
            'api_deviceInfo_vehicleStatus_ghostVehicle_post': grpc.unary_unary_rpc_method_handler(
                    servicer.api_deviceInfo_vehicleStatus_ghostVehicle_post,
                    request_deserializer=device__info__pb2.SetGhostVehiclePost.FromString,
                    response_serializer=device__info__pb2.Response.SerializeToString,
            ),
            'api_deviceInfo_vehicleStatus_ghostVehicleCancel_post': grpc.unary_unary_rpc_method_handler(
                    servicer.api_deviceInfo_vehicleStatus_ghostVehicleCancel_post,
                    request_deserializer=device__info__pb2.SetGhostVehicleCancelPost.FromString,
                    response_serializer=device__info__pb2.Response.SerializeToString,
            ),
            'getVehicleChassis': grpc.unary_unary_rpc_method_handler(
                    servicer.getVehicleChassis,
                    request_deserializer=device__info__pb2.Request.FromString,
                    response_serializer=device__info__pb2.Response.SerializeToString,
            ),
            'getVehicleAscChassis': grpc.unary_unary_rpc_method_handler(
                    servicer.getVehicleAscChassis,
                    request_deserializer=device__info__pb2.Request.FromString,
                    response_serializer=device__info__pb2.Response.SerializeToString,
            ),
            'getVehiclesys': grpc.unary_unary_rpc_method_handler(
                    servicer.getVehiclesys,
                    request_deserializer=device__info__pb2.Request.FromString,
                    response_serializer=device__info__pb2.Response.SerializeToString,
            ),
            'api_deviceInfo_vehicleStatus_SetOperation_post': grpc.unary_unary_rpc_method_handler(
                    servicer.api_deviceInfo_vehicleStatus_SetOperation_post,
                    request_deserializer=device__info__pb2.Request.FromString,
                    response_serializer=device__info__pb2.Response.SerializeToString,
            ),
            'Operation': grpc.unary_unary_rpc_method_handler(
                    servicer.Operation,
                    request_deserializer=device__info__pb2.Request.FromString,
                    response_serializer=device__info__pb2.Response.SerializeToString,
            ),
            'SuspendReasonReport': grpc.unary_unary_rpc_method_handler(
                    servicer.SuspendReasonReport,
                    request_deserializer=device__info__pb2.ReportSuspend.FromString,
                    response_serializer=device__info__pb2.Response.SerializeToString,
            ),
            'SuspendReason': grpc.unary_unary_rpc_method_handler(
                    servicer.SuspendReason,
                    request_deserializer=device__info__pb2.Request.FromString,
                    response_serializer=device__info__pb2.Response.SerializeToString,
            ),
            'StopTime': grpc.unary_unary_rpc_method_handler(
                    servicer.StopTime,
                    request_deserializer=device__info__pb2.ReportStopTime.FromString,
                    response_serializer=device__info__pb2.Response.SerializeToString,
            ),
            'CurrentStatus': grpc.unary_unary_rpc_method_handler(
                    servicer.CurrentStatus,
                    request_deserializer=device__info__pb2.Request.FromString,
                    response_serializer=device__info__pb2.Response.SerializeToString,
            ),
            'BtnStatus': grpc.unary_unary_rpc_method_handler(
                    servicer.BtnStatus,
                    request_deserializer=device__info__pb2.Request.FromString,
                    response_serializer=device__info__pb2.Response.SerializeToString,
            ),
            'api_deviceInfo_vehicleStatus_BtnStatus_post': grpc.unary_unary_rpc_method_handler(
                    servicer.api_deviceInfo_vehicleStatus_BtnStatus_post,
                    request_deserializer=device__info__pb2.BtnStatusSchemas.FromString,
                    response_serializer=device__info__pb2.Response.SerializeToString,
            ),
            'craneStatus': grpc.unary_unary_rpc_method_handler(
                    servicer.craneStatus,
                    request_deserializer=device__info__pb2.Request.FromString,
                    response_serializer=device__info__pb2.Response.SerializeToString,
            ),
            'lane': grpc.unary_unary_rpc_method_handler(
                    servicer.lane,
                    request_deserializer=device__info__pb2.Request.FromString,
                    response_serializer=device__info__pb2.Response.SerializeToString,
            ),
            'craneList': grpc.unary_unary_rpc_method_handler(
                    servicer.craneList,
                    request_deserializer=device__info__pb2.Request.FromString,
                    response_serializer=device__info__pb2.Response.SerializeToString,
            ),
            'plcStatus': grpc.unary_unary_rpc_method_handler(
                    servicer.plcStatus,
                    request_deserializer=device__info__pb2.Request.FromString,
                    response_serializer=device__info__pb2.Response.SerializeToString,
            ),
            'SetPileInfoReport': grpc.unary_unary_rpc_method_handler(
                    servicer.SetPileInfoReport,
                    request_deserializer=device__info__pb2.SetPileInfoSchemas.FromString,
                    response_serializer=device__info__pb2.Response.SerializeToString,
            ),
            'getPileInfoReport': grpc.unary_unary_rpc_method_handler(
                    servicer.getPileInfoReport,
                    request_deserializer=device__info__pb2.GetPileInfoSchemas.FromString,
                    response_serializer=device__info__pb2.Response.SerializeToString,
            ),
            'SetPileInfoAllCodeReport': grpc.unary_unary_rpc_method_handler(
                    servicer.SetPileInfoAllCodeReport,
                    request_deserializer=device__info__pb2.SetPileInfoAllSchemas.FromString,
                    response_serializer=device__info__pb2.Response.SerializeToString,
            ),
            'GetPileInfoAllCodeReport': grpc.unary_unary_rpc_method_handler(
                    servicer.GetPileInfoAllCodeReport,
                    request_deserializer=device__info__pb2.Request.FromString,
                    response_serializer=device__info__pb2.Response.SerializeToString,
            ),
            'PileMessage': grpc.unary_unary_rpc_method_handler(
                    servicer.PileMessage,
                    request_deserializer=device__info__pb2.PileMessageSchemas.FromString,
                    response_serializer=device__info__pb2.Response.SerializeToString,
            ),
            'PileMessageGet': grpc.unary_unary_rpc_method_handler(
                    servicer.PileMessageGet,
                    request_deserializer=device__info__pb2.Request.FromString,
                    response_serializer=device__info__pb2.Response.SerializeToString,
            ),
            'arriveTg': grpc.unary_unary_rpc_method_handler(
                    servicer.arriveTg,
                    request_deserializer=device__info__pb2.Request.FromString,
                    response_serializer=device__info__pb2.Response.SerializeToString,
            ),
            'leaveTg': grpc.unary_unary_rpc_method_handler(
                    servicer.leaveTg,
                    request_deserializer=device__info__pb2.Request.FromString,
                    response_serializer=device__info__pb2.Response.SerializeToString,
            ),
            'SetmultiCarEmergencyStop': grpc.unary_unary_rpc_method_handler(
                    servicer.SetmultiCarEmergencyStop,
                    request_deserializer=device__info__pb2.Request.FromString,
                    response_serializer=device__info__pb2.Response.SerializeToString,
            ),
            'GetmultiCarEmergencyStop': grpc.unary_unary_rpc_method_handler(
                    servicer.GetmultiCarEmergencyStop,
                    request_deserializer=device__info__pb2.Request.FromString,
                    response_serializer=device__info__pb2.Response.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'Device_Info.Device_Info', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Device_Info(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def api_deviceInfo_maintain_status_post(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Device_Info.Device_Info/api_deviceInfo_maintain_status_post',
            device__info__pb2.Request.SerializeToString,
            device__info__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def api_deviceInfo_maintain_start_tracemalloc_get(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Device_Info.Device_Info/api_deviceInfo_maintain_start_tracemalloc_get',
            device__info__pb2.Request.SerializeToString,
            device__info__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def api_deviceInfo_maintain_stop_tracemalloc_get(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Device_Info.Device_Info/api_deviceInfo_maintain_stop_tracemalloc_get',
            device__info__pb2.Request.SerializeToString,
            device__info__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def api_deviceInfo_maintain_get_tracemalloc_get(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Device_Info.Device_Info/api_deviceInfo_maintain_get_tracemalloc_get',
            device__info__pb2.Request.SerializeToString,
            device__info__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def deleteVehicle(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Device_Info.Device_Info/deleteVehicle',
            device__info__pb2.Request.SerializeToString,
            device__info__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def deleteTg(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Device_Info.Device_Info/deleteTg',
            device__info__pb2.Request.SerializeToString,
            device__info__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def vehicleDetails(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Device_Info.Device_Info/vehicleDetails',
            device__info__pb2.Request.SerializeToString,
            device__info__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def api_deviceInfo_vehicleStatus_vehicleDetails_post(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Device_Info.Device_Info/api_deviceInfo_vehicleStatus_vehicleDetails_post',
            device__info__pb2.Request.SerializeToString,
            device__info__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def LoginStatus(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Device_Info.Device_Info/LoginStatus',
            device__info__pb2.Request.SerializeToString,
            device__info__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def api_deviceInfo_vehicleStatus_LoginStatus_post(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Device_Info.Device_Info/api_deviceInfo_vehicleStatus_LoginStatus_post',
            device__info__pb2.SetLoginStatusPost.SerializeToString,
            device__info__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def api_deviceInfo_vehicleStatus_mode_get(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Device_Info.Device_Info/api_deviceInfo_vehicleStatus_mode_get',
            device__info__pb2.Request.SerializeToString,
            device__info__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def api_deviceInfo_vehicleStatus_mode_post(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Device_Info.Device_Info/api_deviceInfo_vehicleStatus_mode_post',
            device__info__pb2.SetModePost.SerializeToString,
            device__info__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def bsm(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Device_Info.Device_Info/bsm',
            device__info__pb2.Request.SerializeToString,
            device__info__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def soc(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Device_Info.Device_Info/soc',
            device__info__pb2.Request.SerializeToString,
            device__info__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def api_deviceInfo_vehicleStatus_soc_post(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Device_Info.Device_Info/api_deviceInfo_vehicleStatus_soc_post',
            device__info__pb2.SetSocPost.SerializeToString,
            device__info__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def longPath(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Device_Info.Device_Info/longPath',
            device__info__pb2.Request.SerializeToString,
            device__info__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def api_deviceInfo_vehicleStatus_longPath_post(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Device_Info.Device_Info/api_deviceInfo_vehicleStatus_longPath_post',
            device__info__pb2.SetLongPath.SerializeToString,
            device__info__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def shortPath(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Device_Info.Device_Info/shortPath',
            device__info__pb2.Request.SerializeToString,
            device__info__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def api_deviceInfo_vehicleStatus_shortPath_post(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Device_Info.Device_Info/api_deviceInfo_vehicleStatus_shortPath_post',
            device__info__pb2.SetShortPath.SerializeToString,
            device__info__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def suspend(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Device_Info.Device_Info/suspend',
            device__info__pb2.Request.SerializeToString,
            device__info__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def api_deviceInfo_vehicleStatus_suspend_post(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Device_Info.Device_Info/api_deviceInfo_vehicleStatus_suspend_post',
            device__info__pb2.Request.SerializeToString,
            device__info__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def api_deviceInfo_vehicleStatus_trailerStatus_get(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Device_Info.Device_Info/api_deviceInfo_vehicleStatus_trailerStatus_get',
            device__info__pb2.Request.SerializeToString,
            device__info__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def api_deviceInfo_vehicleStatus_trailerStatus_post(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Device_Info.Device_Info/api_deviceInfo_vehicleStatus_trailerStatus_post',
            device__info__pb2.SetTrailerStatusPost.SerializeToString,
            device__info__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ghostVehicle(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Device_Info.Device_Info/ghostVehicle',
            device__info__pb2.Request.SerializeToString,
            device__info__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def api_deviceInfo_vehicleStatus_ghostVehicle_post(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Device_Info.Device_Info/api_deviceInfo_vehicleStatus_ghostVehicle_post',
            device__info__pb2.SetGhostVehiclePost.SerializeToString,
            device__info__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def api_deviceInfo_vehicleStatus_ghostVehicleCancel_post(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Device_Info.Device_Info/api_deviceInfo_vehicleStatus_ghostVehicleCancel_post',
            device__info__pb2.SetGhostVehicleCancelPost.SerializeToString,
            device__info__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def getVehicleChassis(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Device_Info.Device_Info/getVehicleChassis',
            device__info__pb2.Request.SerializeToString,
            device__info__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def getVehicleAscChassis(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Device_Info.Device_Info/getVehicleAscChassis',
            device__info__pb2.Request.SerializeToString,
            device__info__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def getVehiclesys(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Device_Info.Device_Info/getVehiclesys',
            device__info__pb2.Request.SerializeToString,
            device__info__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def api_deviceInfo_vehicleStatus_SetOperation_post(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Device_Info.Device_Info/api_deviceInfo_vehicleStatus_SetOperation_post',
            device__info__pb2.Request.SerializeToString,
            device__info__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Operation(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Device_Info.Device_Info/Operation',
            device__info__pb2.Request.SerializeToString,
            device__info__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SuspendReasonReport(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Device_Info.Device_Info/SuspendReasonReport',
            device__info__pb2.ReportSuspend.SerializeToString,
            device__info__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SuspendReason(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Device_Info.Device_Info/SuspendReason',
            device__info__pb2.Request.SerializeToString,
            device__info__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def StopTime(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Device_Info.Device_Info/StopTime',
            device__info__pb2.ReportStopTime.SerializeToString,
            device__info__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CurrentStatus(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Device_Info.Device_Info/CurrentStatus',
            device__info__pb2.Request.SerializeToString,
            device__info__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def BtnStatus(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Device_Info.Device_Info/BtnStatus',
            device__info__pb2.Request.SerializeToString,
            device__info__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def api_deviceInfo_vehicleStatus_BtnStatus_post(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Device_Info.Device_Info/api_deviceInfo_vehicleStatus_BtnStatus_post',
            device__info__pb2.BtnStatusSchemas.SerializeToString,
            device__info__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def craneStatus(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Device_Info.Device_Info/craneStatus',
            device__info__pb2.Request.SerializeToString,
            device__info__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def lane(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Device_Info.Device_Info/lane',
            device__info__pb2.Request.SerializeToString,
            device__info__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def craneList(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Device_Info.Device_Info/craneList',
            device__info__pb2.Request.SerializeToString,
            device__info__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def plcStatus(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Device_Info.Device_Info/plcStatus',
            device__info__pb2.Request.SerializeToString,
            device__info__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetPileInfoReport(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Device_Info.Device_Info/SetPileInfoReport',
            device__info__pb2.SetPileInfoSchemas.SerializeToString,
            device__info__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def getPileInfoReport(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Device_Info.Device_Info/getPileInfoReport',
            device__info__pb2.GetPileInfoSchemas.SerializeToString,
            device__info__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetPileInfoAllCodeReport(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Device_Info.Device_Info/SetPileInfoAllCodeReport',
            device__info__pb2.SetPileInfoAllSchemas.SerializeToString,
            device__info__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetPileInfoAllCodeReport(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Device_Info.Device_Info/GetPileInfoAllCodeReport',
            device__info__pb2.Request.SerializeToString,
            device__info__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def PileMessage(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Device_Info.Device_Info/PileMessage',
            device__info__pb2.PileMessageSchemas.SerializeToString,
            device__info__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def PileMessageGet(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Device_Info.Device_Info/PileMessageGet',
            device__info__pb2.Request.SerializeToString,
            device__info__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def arriveTg(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Device_Info.Device_Info/arriveTg',
            device__info__pb2.Request.SerializeToString,
            device__info__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def leaveTg(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Device_Info.Device_Info/leaveTg',
            device__info__pb2.Request.SerializeToString,
            device__info__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetmultiCarEmergencyStop(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Device_Info.Device_Info/SetmultiCarEmergencyStop',
            device__info__pb2.Request.SerializeToString,
            device__info__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetmultiCarEmergencyStop(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Device_Info.Device_Info/GetmultiCarEmergencyStop',
            device__info__pb2.Request.SerializeToString,
            device__info__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

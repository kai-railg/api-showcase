# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from . import camunda_pb2 as camunda__pb2


class CamundaStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.startProcess = channel.unary_unary(
                '/Camunda.Camunda/startProcess',
                request_serializer=camunda__pb2.StartProcessRequest.SerializeToString,
                response_deserializer=camunda__pb2.Response.FromString,
                )
        self.setVariablesByBisKey = channel.unary_unary(
                '/Camunda.Camunda/setVariablesByBisKey',
                request_serializer=camunda__pb2.VariableRequest.SerializeToString,
                response_deserializer=camunda__pb2.Response.FromString,
                )
        self.searchCurrentActiveMessageEvents = channel.unary_unary(
                '/Camunda.Camunda/searchCurrentActiveMessageEvents',
                request_serializer=camunda__pb2.ActInfoRequest.SerializeToString,
                response_deserializer=camunda__pb2.Response.FromString,
                )
        self.searchCurrentActInfo = channel.unary_unary(
                '/Camunda.Camunda/searchCurrentActInfo',
                request_serializer=camunda__pb2.ActInfoRequest.SerializeToString,
                response_deserializer=camunda__pb2.Response.FromString,
                )
        self.receivedTaskMessageEvent = channel.unary_unary(
                '/Camunda.Camunda/receivedTaskMessageEvent',
                request_serializer=camunda__pb2.ReceivedTaskRequest.SerializeToString,
                response_deserializer=camunda__pb2.Response.FromString,
                )
        self.receivedMessageEvent = channel.unary_unary(
                '/Camunda.Camunda/receivedMessageEvent',
                request_serializer=camunda__pb2.ReceivedMessageEvent.SerializeToString,
                response_deserializer=camunda__pb2.Response.FromString,
                )
        self.receivedCommon = channel.unary_unary(
                '/Camunda.Camunda/receivedCommon',
                request_serializer=camunda__pb2.ReceivedCommonRequest.SerializeToString,
                response_deserializer=camunda__pb2.Response.FromString,
                )
        self.completeUserTask = channel.unary_unary(
                '/Camunda.Camunda/completeUserTask',
                request_serializer=camunda__pb2.ReceivedCommonRequest.SerializeToString,
                response_deserializer=camunda__pb2.Response.FromString,
                )
        self.cancelProcess = channel.unary_unary(
                '/Camunda.Camunda/cancelProcess',
                request_serializer=camunda__pb2.CancelProcessRequest.SerializeToString,
                response_deserializer=camunda__pb2.Response.FromString,
                )


class CamundaServicer(object):
    """Missing associated documentation comment in .proto file."""

    def startProcess(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def setVariablesByBisKey(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def searchCurrentActiveMessageEvents(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def searchCurrentActInfo(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def receivedTaskMessageEvent(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def receivedMessageEvent(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def receivedCommon(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def completeUserTask(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def cancelProcess(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_CamundaServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'startProcess': grpc.unary_unary_rpc_method_handler(
                    servicer.startProcess,
                    request_deserializer=camunda__pb2.StartProcessRequest.FromString,
                    response_serializer=camunda__pb2.Response.SerializeToString,
            ),
            'setVariablesByBisKey': grpc.unary_unary_rpc_method_handler(
                    servicer.setVariablesByBisKey,
                    request_deserializer=camunda__pb2.VariableRequest.FromString,
                    response_serializer=camunda__pb2.Response.SerializeToString,
            ),
            'searchCurrentActiveMessageEvents': grpc.unary_unary_rpc_method_handler(
                    servicer.searchCurrentActiveMessageEvents,
                    request_deserializer=camunda__pb2.ActInfoRequest.FromString,
                    response_serializer=camunda__pb2.Response.SerializeToString,
            ),
            'searchCurrentActInfo': grpc.unary_unary_rpc_method_handler(
                    servicer.searchCurrentActInfo,
                    request_deserializer=camunda__pb2.ActInfoRequest.FromString,
                    response_serializer=camunda__pb2.Response.SerializeToString,
            ),
            'receivedTaskMessageEvent': grpc.unary_unary_rpc_method_handler(
                    servicer.receivedTaskMessageEvent,
                    request_deserializer=camunda__pb2.ReceivedTaskRequest.FromString,
                    response_serializer=camunda__pb2.Response.SerializeToString,
            ),
            'receivedMessageEvent': grpc.unary_unary_rpc_method_handler(
                    servicer.receivedMessageEvent,
                    request_deserializer=camunda__pb2.ReceivedMessageEvent.FromString,
                    response_serializer=camunda__pb2.Response.SerializeToString,
            ),
            'receivedCommon': grpc.unary_unary_rpc_method_handler(
                    servicer.receivedCommon,
                    request_deserializer=camunda__pb2.ReceivedCommonRequest.FromString,
                    response_serializer=camunda__pb2.Response.SerializeToString,
            ),
            'completeUserTask': grpc.unary_unary_rpc_method_handler(
                    servicer.completeUserTask,
                    request_deserializer=camunda__pb2.ReceivedCommonRequest.FromString,
                    response_serializer=camunda__pb2.Response.SerializeToString,
            ),
            'cancelProcess': grpc.unary_unary_rpc_method_handler(
                    servicer.cancelProcess,
                    request_deserializer=camunda__pb2.CancelProcessRequest.FromString,
                    response_serializer=camunda__pb2.Response.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'Camunda.Camunda', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Camunda(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def startProcess(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Camunda.Camunda/startProcess',
            camunda__pb2.StartProcessRequest.SerializeToString,
            camunda__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def setVariablesByBisKey(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Camunda.Camunda/setVariablesByBisKey',
            camunda__pb2.VariableRequest.SerializeToString,
            camunda__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def searchCurrentActiveMessageEvents(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Camunda.Camunda/searchCurrentActiveMessageEvents',
            camunda__pb2.ActInfoRequest.SerializeToString,
            camunda__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def searchCurrentActInfo(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Camunda.Camunda/searchCurrentActInfo',
            camunda__pb2.ActInfoRequest.SerializeToString,
            camunda__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def receivedTaskMessageEvent(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Camunda.Camunda/receivedTaskMessageEvent',
            camunda__pb2.ReceivedTaskRequest.SerializeToString,
            camunda__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def receivedMessageEvent(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Camunda.Camunda/receivedMessageEvent',
            camunda__pb2.ReceivedMessageEvent.SerializeToString,
            camunda__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def receivedCommon(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Camunda.Camunda/receivedCommon',
            camunda__pb2.ReceivedCommonRequest.SerializeToString,
            camunda__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def completeUserTask(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Camunda.Camunda/completeUserTask',
            camunda__pb2.ReceivedCommonRequest.SerializeToString,
            camunda__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def cancelProcess(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Camunda.Camunda/cancelProcess',
            camunda__pb2.CancelProcessRequest.SerializeToString,
            camunda__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
